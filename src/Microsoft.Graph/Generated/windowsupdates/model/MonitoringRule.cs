// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph.WindowsUpdates
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type MonitoringRule.
    /// </summary>
    [JsonConverter(typeof(Microsoft.Graph.DerivedTypeConverter<MonitoringRule>))]
    public partial class MonitoringRule
    {

        /// <summary>
        /// Gets or sets action.
        /// The action triggered when the threshold for the given signal is reached. Possible values are: alertError, pauseDeployment, offerFallback, unknownFutureValue. The offerFallback member is only supported on feature update deployments of Windows 11 and must be paired with the ineligible signal. The fallback version offered is the version 22H2 of Windows 10.
        /// </summary>
        [JsonPropertyName("action")]
        public MonitoringAction? Action { get; set; }
    
        /// <summary>
        /// Gets or sets signal.
        /// The signal to monitor. Possible values are: rollback, ineligible, unknownFutureValue. The ineligible member is only supported on feature update deployments of Windows 11 and must be paired with the offerFallback action.
        /// </summary>
        [JsonPropertyName("signal")]
        public MonitoringSignal? Signal { get; set; }
    
        /// <summary>
        /// Gets or sets threshold.
        /// The threshold for a signal at which to trigger the action. An integer from 1 to 100 (inclusive). This value is ignored when the signal is ineligible and the action is offerFallback.
        /// </summary>
        [JsonPropertyName("threshold")]
        public Int32? Threshold { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}

// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph.CallRecords
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type DirectRoutingLogRow.
    /// </summary>
    [JsonConverter(typeof(Microsoft.Graph.DerivedTypeConverter<DirectRoutingLogRow>))]
    public partial class DirectRoutingLogRow
    {

        /// <summary>
        /// Gets or sets calleeNumber.
        /// Number of the user or bot who received the call (E.164 format, but may include additional data).
        /// </summary>
        [JsonPropertyName("calleeNumber")]
        public string CalleeNumber { get; set; }
    
        /// <summary>
        /// Gets or sets callEndSubReason.
        /// In addition to the SIP codes, Microsoft has own subcodes that indicate the specific issue.
        /// </summary>
        [JsonPropertyName("callEndSubReason")]
        public Int32? CallEndSubReason { get; set; }
    
        /// <summary>
        /// Gets or sets callerNumber.
        /// Number of the user or bot who made the call (E.164 format, but may include additional data).
        /// </summary>
        [JsonPropertyName("callerNumber")]
        public string CallerNumber { get; set; }
    
        /// <summary>
        /// Gets or sets callType.
        /// Call type and direction.
        /// </summary>
        [JsonPropertyName("callType")]
        public string CallType { get; set; }
    
        /// <summary>
        /// Gets or sets correlationId.
        /// Identifier (GUID) for the call that you can use when calling Microsoft Support.
        /// </summary>
        [JsonPropertyName("correlationId")]
        public string CorrelationId { get; set; }
    
        /// <summary>
        /// Gets or sets duration.
        /// Duration of the call in seconds.
        /// </summary>
        [JsonPropertyName("duration")]
        public Int32? Duration { get; set; }
    
        /// <summary>
        /// Gets or sets endDateTime.
        /// Only exists for successful (fully established) calls. Time when call ended.
        /// </summary>
        [JsonPropertyName("endDateTime")]
        public DateTimeOffset? EndDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets failureDateTime.
        /// Only exists for failed (not fully established) calls.
        /// </summary>
        [JsonPropertyName("failureDateTime")]
        public DateTimeOffset? FailureDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets finalSipCode.
        /// The code with which the call ended (RFC 3261).
        /// </summary>
        [JsonPropertyName("finalSipCode")]
        public Int32? FinalSipCode { get; set; }
    
        /// <summary>
        /// Gets or sets finalSipCodePhrase.
        /// Description of the SIP code and Microsoft subcode.
        /// </summary>
        [JsonPropertyName("finalSipCodePhrase")]
        public string FinalSipCodePhrase { get; set; }
    
        /// <summary>
        /// Gets or sets id.
        /// Unique call identifier (GUID).
        /// </summary>
        [JsonPropertyName("id")]
        public string Id { get; set; }
    
        /// <summary>
        /// Gets or sets inviteDateTime.
        /// When the initial invite was sent.
        /// </summary>
        [JsonPropertyName("inviteDateTime")]
        public DateTimeOffset? InviteDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets mediaBypassEnabled.
        /// Indicates if the trunk was enabled for media bypass or not.
        /// </summary>
        [JsonPropertyName("mediaBypassEnabled")]
        public bool? MediaBypassEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets mediaPathLocation.
        /// The data center used for media path in non-bypass call.
        /// </summary>
        [JsonPropertyName("mediaPathLocation")]
        public string MediaPathLocation { get; set; }
    
        /// <summary>
        /// Gets or sets otherPartyCountryCode.
        /// Country code of the caller in case of an incoming call, or callee in case of an outgoing call. For details, see ISO 3166-1 alpha-2.
        /// </summary>
        [JsonPropertyName("otherPartyCountryCode")]
        public string OtherPartyCountryCode { get; set; }
    
        /// <summary>
        /// Gets or sets signalingLocation.
        /// The data center used for signaling for both bypass and non-bypass calls.
        /// </summary>
        [JsonPropertyName("signalingLocation")]
        public string SignalingLocation { get; set; }
    
        /// <summary>
        /// Gets or sets startDateTime.
        /// Call start time.For failed and unanswered calls, this can be equal to invite or failure time.
        /// </summary>
        [JsonPropertyName("startDateTime")]
        public DateTimeOffset? StartDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets successfulCall.
        /// Success or attempt.
        /// </summary>
        [JsonPropertyName("successfulCall")]
        public bool? SuccessfulCall { get; set; }
    
        /// <summary>
        /// Gets or sets trunkFullyQualifiedDomainName.
        /// Fully qualified domain name of the session border controller.
        /// </summary>
        [JsonPropertyName("trunkFullyQualifiedDomainName")]
        public string TrunkFullyQualifiedDomainName { get; set; }
    
        /// <summary>
        /// Gets or sets userCountryCode.
        /// Country code of the user. For details, see ISO 3166-1 alpha-2.
        /// </summary>
        [JsonPropertyName("userCountryCode")]
        public string UserCountryCode { get; set; }
    
        /// <summary>
        /// Gets or sets userDisplayName.
        /// Display name of the user.
        /// </summary>
        [JsonPropertyName("userDisplayName")]
        public string UserDisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets userId.
        /// The unique identifier (GUID) of the user in Azure Active Directory. This and other user info will be null/empty for bot call types.
        /// </summary>
        [JsonPropertyName("userId")]
        public string UserId { get; set; }
    
        /// <summary>
        /// Gets or sets userPrincipalName.
        /// The user principal name (sign-in name) in Azure Active Directory. This is usually the same as the user's SIP address, and can be same as the user's e-mail address.
        /// </summary>
        [JsonPropertyName("userPrincipalName")]
        public string UserPrincipalName { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}

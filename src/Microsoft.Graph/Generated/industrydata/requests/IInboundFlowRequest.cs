// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: IEntityRequest.cs.tt

namespace Microsoft.Graph.IndustryData
{
    using System;
    using System.IO;
    using System.Net.Http;
    using System.Threading;
    using System.Linq.Expressions;

    /// <summary>
    /// The interface IInboundFlowRequest.
    /// </summary>
    public partial interface IInboundFlowRequest : Microsoft.Graph.IBaseRequest
    {
        /// <summary>
        /// Creates the specified InboundFlow using POST.
        /// </summary>
        /// <param name="inboundFlowToCreate">The InboundFlow to create.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The created InboundFlow.</returns>
        System.Threading.Tasks.Task<InboundFlow> CreateAsync(InboundFlow inboundFlowToCreate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Creates the specified InboundFlow using POST and returns a <see cref="GraphResponse{InboundFlow}"/> object.
        /// </summary>
        /// <param name="inboundFlowToCreate">The InboundFlow to create.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The <see cref="GraphResponse{InboundFlow}"/> object of the request.</returns>
        System.Threading.Tasks.Task<GraphResponse<InboundFlow>> CreateResponseAsync(InboundFlow inboundFlowToCreate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Deletes the specified InboundFlow.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task to await.</returns>
        System.Threading.Tasks.Task DeleteAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Deletes the specified InboundFlow and returns a <see cref="GraphResponse"/> object.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task of <see cref="GraphResponse"/> to await.</returns>
        System.Threading.Tasks.Task<GraphResponse> DeleteResponseAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Gets the specified InboundFlow.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The InboundFlow.</returns>
        System.Threading.Tasks.Task<InboundFlow> GetAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Gets the specified InboundFlow and returns a <see cref="GraphResponse{InboundFlow}"/> object.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The <see cref="GraphResponse{InboundFlow}"/> object of the request.</returns>
        System.Threading.Tasks.Task<GraphResponse<InboundFlow>> GetResponseAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Updates the specified InboundFlow using PATCH.
        /// </summary>
        /// <param name="inboundFlowToUpdate">The InboundFlow to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <exception cref="Microsoft.Graph.ClientException">Thrown when an object returned in a response is used for updating an object in Microsoft Graph.</exception>
        /// <returns>The updated InboundFlow.</returns>
        System.Threading.Tasks.Task<InboundFlow> UpdateAsync(InboundFlow inboundFlowToUpdate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Updates the specified InboundFlow using PATCH and returns a <see cref="GraphResponse{InboundFlow}"/> object.
        /// </summary>
        /// <param name="inboundFlowToUpdate">The InboundFlow to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <exception cref="Microsoft.Graph.ClientException">Thrown when an object returned in a response is used for updating an object in Microsoft Graph.</exception>
        /// <returns>The <see cref="GraphResponse{InboundFlow}"/> object of the request.</returns>
        System.Threading.Tasks.Task<GraphResponse<InboundFlow>> UpdateResponseAsync(InboundFlow inboundFlowToUpdate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Updates the specified InboundFlow using PUT.
        /// </summary>
        /// <param name="inboundFlowToUpdate">The InboundFlow object to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task to await.</returns>
        System.Threading.Tasks.Task<InboundFlow> PutAsync(InboundFlow inboundFlowToUpdate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Updates the specified InboundFlow using PUT and returns a <see cref="GraphResponse{InboundFlow}"/> object.
        /// </summary>
        /// <param name="inboundFlowToUpdate">The InboundFlow object to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task of <see cref="GraphResponse{InboundFlow}"/> to await.</returns>
        System.Threading.Tasks.Task<GraphResponse<InboundFlow>> PutResponseAsync(InboundFlow inboundFlowToUpdate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Adds the specified expand value to the request.
        /// </summary>
        /// <param name="value">The expand value.</param>
        /// <returns>The request object to send.</returns>
        IInboundFlowRequest Expand(string value);

        /// <summary>
        /// Adds the specified expand value to the request.
        /// </summary>
        /// <param name="expandExpression">The expression from which to calculate the expand value.</param>
        /// <returns>The request object to send.</returns>
        IInboundFlowRequest Expand(Expression<Func<InboundFlow, object>> expandExpression);

        /// <summary>
        /// Adds the specified select value to the request.
        /// </summary>
        /// <param name="value">The select value.</param>
        /// <returns>The request object to send.</returns>
        IInboundFlowRequest Select(string value);

        /// <summary>
        /// Adds the specified select value to the request.
        /// </summary>
        /// <param name="selectExpression">The expression from which to calculate the select value.</param>
        /// <returns>The request object to send.</returns>
        IInboundFlowRequest Select(Expression<Func<InboundFlow, object>> selectExpression);

    }
}

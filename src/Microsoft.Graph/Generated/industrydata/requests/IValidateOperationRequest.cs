// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: IEntityRequest.cs.tt

namespace Microsoft.Graph.IndustryData
{
    using System;
    using System.IO;
    using System.Net.Http;
    using System.Threading;
    using System.Linq.Expressions;

    /// <summary>
    /// The interface IValidateOperationRequest.
    /// </summary>
    public partial interface IValidateOperationRequest : Microsoft.Graph.IBaseRequest
    {
        /// <summary>
        /// Creates the specified ValidateOperation using POST.
        /// </summary>
        /// <param name="validateOperationToCreate">The ValidateOperation to create.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The created ValidateOperation.</returns>
        System.Threading.Tasks.Task<ValidateOperation> CreateAsync(ValidateOperation validateOperationToCreate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Creates the specified ValidateOperation using POST and returns a <see cref="GraphResponse{ValidateOperation}"/> object.
        /// </summary>
        /// <param name="validateOperationToCreate">The ValidateOperation to create.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The <see cref="GraphResponse{ValidateOperation}"/> object of the request.</returns>
        System.Threading.Tasks.Task<GraphResponse<ValidateOperation>> CreateResponseAsync(ValidateOperation validateOperationToCreate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Deletes the specified ValidateOperation.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task to await.</returns>
        System.Threading.Tasks.Task DeleteAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Deletes the specified ValidateOperation and returns a <see cref="GraphResponse"/> object.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task of <see cref="GraphResponse"/> to await.</returns>
        System.Threading.Tasks.Task<GraphResponse> DeleteResponseAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Gets the specified ValidateOperation.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The ValidateOperation.</returns>
        System.Threading.Tasks.Task<ValidateOperation> GetAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Gets the specified ValidateOperation and returns a <see cref="GraphResponse{ValidateOperation}"/> object.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The <see cref="GraphResponse{ValidateOperation}"/> object of the request.</returns>
        System.Threading.Tasks.Task<GraphResponse<ValidateOperation>> GetResponseAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Updates the specified ValidateOperation using PATCH.
        /// </summary>
        /// <param name="validateOperationToUpdate">The ValidateOperation to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <exception cref="Microsoft.Graph.ClientException">Thrown when an object returned in a response is used for updating an object in Microsoft Graph.</exception>
        /// <returns>The updated ValidateOperation.</returns>
        System.Threading.Tasks.Task<ValidateOperation> UpdateAsync(ValidateOperation validateOperationToUpdate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Updates the specified ValidateOperation using PATCH and returns a <see cref="GraphResponse{ValidateOperation}"/> object.
        /// </summary>
        /// <param name="validateOperationToUpdate">The ValidateOperation to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <exception cref="Microsoft.Graph.ClientException">Thrown when an object returned in a response is used for updating an object in Microsoft Graph.</exception>
        /// <returns>The <see cref="GraphResponse{ValidateOperation}"/> object of the request.</returns>
        System.Threading.Tasks.Task<GraphResponse<ValidateOperation>> UpdateResponseAsync(ValidateOperation validateOperationToUpdate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Updates the specified ValidateOperation using PUT.
        /// </summary>
        /// <param name="validateOperationToUpdate">The ValidateOperation object to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task to await.</returns>
        System.Threading.Tasks.Task<ValidateOperation> PutAsync(ValidateOperation validateOperationToUpdate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Updates the specified ValidateOperation using PUT and returns a <see cref="GraphResponse{ValidateOperation}"/> object.
        /// </summary>
        /// <param name="validateOperationToUpdate">The ValidateOperation object to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task of <see cref="GraphResponse{ValidateOperation}"/> to await.</returns>
        System.Threading.Tasks.Task<GraphResponse<ValidateOperation>> PutResponseAsync(ValidateOperation validateOperationToUpdate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Adds the specified expand value to the request.
        /// </summary>
        /// <param name="value">The expand value.</param>
        /// <returns>The request object to send.</returns>
        IValidateOperationRequest Expand(string value);

        /// <summary>
        /// Adds the specified expand value to the request.
        /// </summary>
        /// <param name="expandExpression">The expression from which to calculate the expand value.</param>
        /// <returns>The request object to send.</returns>
        IValidateOperationRequest Expand(Expression<Func<ValidateOperation, object>> expandExpression);

        /// <summary>
        /// Adds the specified select value to the request.
        /// </summary>
        /// <param name="value">The select value.</param>
        /// <returns>The request object to send.</returns>
        IValidateOperationRequest Select(string value);

        /// <summary>
        /// Adds the specified select value to the request.
        /// </summary>
        /// <param name="selectExpression">The expression from which to calculate the select value.</param>
        /// <returns>The request object to send.</returns>
        IValidateOperationRequest Select(Expression<Func<ValidateOperation, object>> selectExpression);

    }
}

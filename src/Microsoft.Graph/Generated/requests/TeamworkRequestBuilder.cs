// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityRequestBuilder.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type TeamworkRequestBuilder.
    /// </summary>
    public partial class TeamworkRequestBuilder : EntityRequestBuilder, ITeamworkRequestBuilder
    {

        /// <summary>
        /// Constructs a new TeamworkRequestBuilder.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        public TeamworkRequestBuilder(
            string requestUrl,
            IBaseClient client)
            : base(requestUrl, client)
        {
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        public new ITeamworkRequest Request()
        {
            return this.Request(null);
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public new ITeamworkRequest Request(IEnumerable<Option> options)
        {
            return new TeamworkRequest(this.RequestUrl, this.Client, options);
        }
    
        /// <summary>
        /// Gets the request builder for WorkforceIntegrations.
        /// </summary>
        /// <returns>The <see cref="ITeamworkWorkforceIntegrationsCollectionRequestBuilder"/>.</returns>
        public ITeamworkWorkforceIntegrationsCollectionRequestBuilder WorkforceIntegrations
        {
            get
            {
                return new TeamworkWorkforceIntegrationsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("workforceIntegrations"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeletedChats.
        /// </summary>
        /// <returns>The <see cref="ITeamworkDeletedChatsCollectionRequestBuilder"/>.</returns>
        public ITeamworkDeletedChatsCollectionRequestBuilder DeletedChats
        {
            get
            {
                return new TeamworkDeletedChatsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("deletedChats"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeletedTeams.
        /// </summary>
        /// <returns>The <see cref="ITeamworkDeletedTeamsCollectionRequestBuilder"/>.</returns>
        public ITeamworkDeletedTeamsCollectionRequestBuilder DeletedTeams
        {
            get
            {
                return new TeamworkDeletedTeamsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("deletedTeams"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Devices.
        /// </summary>
        /// <returns>The <see cref="ITeamworkDevicesCollectionRequestBuilder"/>.</returns>
        public ITeamworkDevicesCollectionRequestBuilder Devices
        {
            get
            {
                return new TeamworkDevicesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("devices"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for TeamsAppSettings.
        /// </summary>
        /// <returns>The <see cref="ITeamsAppSettingsRequestBuilder"/>.</returns>
        public ITeamsAppSettingsRequestBuilder TeamsAppSettings
        {
            get
            {
                return new TeamsAppSettingsRequestBuilder(this.AppendSegmentToRequestUrl("teamsAppSettings"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for TeamTemplates.
        /// </summary>
        /// <returns>The <see cref="ITeamworkTeamTemplatesCollectionRequestBuilder"/>.</returns>
        public ITeamworkTeamTemplatesCollectionRequestBuilder TeamTemplates
        {
            get
            {
                return new TeamworkTeamTemplatesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("teamTemplates"), this.Client);
            }
        }
    
        /// <summary>
        /// Gets the request builder for TeamworkSendActivityNotificationToRecipients.
        /// </summary>
        /// <returns>The <see cref="ITeamworkSendActivityNotificationToRecipientsRequestBuilder"/>.</returns>
        public ITeamworkSendActivityNotificationToRecipientsRequestBuilder SendActivityNotificationToRecipients(
            TeamworkActivityTopic topic = null,
            string activityType = null,
            Int64? chainId = null,
            ItemBody previewText = null,
            string teamsAppId = null,
            IEnumerable<KeyValuePair> templateParameters = null,
            IEnumerable<TeamworkNotificationRecipient> recipients = null)
        {
            return new TeamworkSendActivityNotificationToRecipientsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.sendActivityNotificationToRecipients"),
                this.Client,
                topic,
                activityType,
                chainId,
                previewText,
                teamsAppId,
                templateParameters,
                recipients);
        }
    
    }
}

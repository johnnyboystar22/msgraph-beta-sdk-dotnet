// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: IEntityRequest.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.IO;
    using System.Net.Http;
    using System.Threading;
    using System.Linq.Expressions;

    /// <summary>
    /// The interface ICloudPcBulkRestartRequest.
    /// </summary>
    public partial interface ICloudPcBulkRestartRequest : IBaseRequest
    {
        /// <summary>
        /// Creates the specified CloudPcBulkRestart using POST.
        /// </summary>
        /// <param name="cloudPcBulkRestartToCreate">The CloudPcBulkRestart to create.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The created CloudPcBulkRestart.</returns>
        System.Threading.Tasks.Task<CloudPcBulkRestart> CreateAsync(CloudPcBulkRestart cloudPcBulkRestartToCreate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Creates the specified CloudPcBulkRestart using POST and returns a <see cref="GraphResponse{CloudPcBulkRestart}"/> object.
        /// </summary>
        /// <param name="cloudPcBulkRestartToCreate">The CloudPcBulkRestart to create.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The <see cref="GraphResponse{CloudPcBulkRestart}"/> object of the request.</returns>
        System.Threading.Tasks.Task<GraphResponse<CloudPcBulkRestart>> CreateResponseAsync(CloudPcBulkRestart cloudPcBulkRestartToCreate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Deletes the specified CloudPcBulkRestart.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task to await.</returns>
        System.Threading.Tasks.Task DeleteAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Deletes the specified CloudPcBulkRestart and returns a <see cref="GraphResponse"/> object.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task of <see cref="GraphResponse"/> to await.</returns>
        System.Threading.Tasks.Task<GraphResponse> DeleteResponseAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Gets the specified CloudPcBulkRestart.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The CloudPcBulkRestart.</returns>
        System.Threading.Tasks.Task<CloudPcBulkRestart> GetAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Gets the specified CloudPcBulkRestart and returns a <see cref="GraphResponse{CloudPcBulkRestart}"/> object.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The <see cref="GraphResponse{CloudPcBulkRestart}"/> object of the request.</returns>
        System.Threading.Tasks.Task<GraphResponse<CloudPcBulkRestart>> GetResponseAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Updates the specified CloudPcBulkRestart using PATCH.
        /// </summary>
        /// <param name="cloudPcBulkRestartToUpdate">The CloudPcBulkRestart to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <exception cref="ClientException">Thrown when an object returned in a response is used for updating an object in Microsoft Graph.</exception>
        /// <returns>The updated CloudPcBulkRestart.</returns>
        System.Threading.Tasks.Task<CloudPcBulkRestart> UpdateAsync(CloudPcBulkRestart cloudPcBulkRestartToUpdate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Updates the specified CloudPcBulkRestart using PATCH and returns a <see cref="GraphResponse{CloudPcBulkRestart}"/> object.
        /// </summary>
        /// <param name="cloudPcBulkRestartToUpdate">The CloudPcBulkRestart to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <exception cref="ClientException">Thrown when an object returned in a response is used for updating an object in Microsoft Graph.</exception>
        /// <returns>The <see cref="GraphResponse{CloudPcBulkRestart}"/> object of the request.</returns>
        System.Threading.Tasks.Task<GraphResponse<CloudPcBulkRestart>> UpdateResponseAsync(CloudPcBulkRestart cloudPcBulkRestartToUpdate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Updates the specified CloudPcBulkRestart using PUT.
        /// </summary>
        /// <param name="cloudPcBulkRestartToUpdate">The CloudPcBulkRestart object to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task to await.</returns>
        System.Threading.Tasks.Task<CloudPcBulkRestart> PutAsync(CloudPcBulkRestart cloudPcBulkRestartToUpdate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Updates the specified CloudPcBulkRestart using PUT and returns a <see cref="GraphResponse{CloudPcBulkRestart}"/> object.
        /// </summary>
        /// <param name="cloudPcBulkRestartToUpdate">The CloudPcBulkRestart object to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task of <see cref="GraphResponse{CloudPcBulkRestart}"/> to await.</returns>
        System.Threading.Tasks.Task<GraphResponse<CloudPcBulkRestart>> PutResponseAsync(CloudPcBulkRestart cloudPcBulkRestartToUpdate, CancellationToken cancellationToken = default);

        /// <summary>
        /// Adds the specified expand value to the request.
        /// </summary>
        /// <param name="value">The expand value.</param>
        /// <returns>The request object to send.</returns>
        ICloudPcBulkRestartRequest Expand(string value);

        /// <summary>
        /// Adds the specified expand value to the request.
        /// </summary>
        /// <param name="expandExpression">The expression from which to calculate the expand value.</param>
        /// <returns>The request object to send.</returns>
        ICloudPcBulkRestartRequest Expand(Expression<Func<CloudPcBulkRestart, object>> expandExpression);

        /// <summary>
        /// Adds the specified select value to the request.
        /// </summary>
        /// <param name="value">The select value.</param>
        /// <returns>The request object to send.</returns>
        ICloudPcBulkRestartRequest Select(string value);

        /// <summary>
        /// Adds the specified select value to the request.
        /// </summary>
        /// <param name="selectExpression">The expression from which to calculate the select value.</param>
        /// <returns>The request object to send.</returns>
        ICloudPcBulkRestartRequest Select(Expression<Func<CloudPcBulkRestart, object>> selectExpression);

    }
}

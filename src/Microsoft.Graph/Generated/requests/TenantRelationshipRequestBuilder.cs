// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityRequestBuilder.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type TenantRelationshipRequestBuilder.
    /// </summary>
    public partial class TenantRelationshipRequestBuilder : BaseRequestBuilder, ITenantRelationshipRequestBuilder
    {

        /// <summary>
        /// Constructs a new TenantRelationshipRequestBuilder.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        public TenantRelationshipRequestBuilder(
            string requestUrl,
            IBaseClient client)
            : base(requestUrl, client)
        {
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        public ITenantRelationshipRequest Request()
        {
            return this.Request(null);
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public ITenantRelationshipRequest Request(IEnumerable<Option> options)
        {
            return new TenantRelationshipRequest(this.RequestUrl, this.Client, options);
        }
    
        /// <summary>
        /// Gets the request builder for MultiTenantOrganization.
        /// </summary>
        /// <returns>The <see cref="IMultiTenantOrganizationRequestBuilder"/>.</returns>
        public IMultiTenantOrganizationRequestBuilder MultiTenantOrganization
        {
            get
            {
                return new MultiTenantOrganizationRequestBuilder(this.AppendSegmentToRequestUrl("multiTenantOrganization"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ManagedTenants.
        /// </summary>
        /// <returns>The <see cref="Microsoft.Graph.ManagedTenants.IManagedTenantRequestBuilder"/>.</returns>
        public Microsoft.Graph.ManagedTenants.IManagedTenantRequestBuilder ManagedTenants
        {
            get
            {
                return new Microsoft.Graph.ManagedTenants.ManagedTenantRequestBuilder(this.AppendSegmentToRequestUrl("managedTenants"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DelegatedAdminCustomers.
        /// </summary>
        /// <returns>The <see cref="ITenantRelationshipDelegatedAdminCustomersCollectionRequestBuilder"/>.</returns>
        public ITenantRelationshipDelegatedAdminCustomersCollectionRequestBuilder DelegatedAdminCustomers
        {
            get
            {
                return new TenantRelationshipDelegatedAdminCustomersCollectionRequestBuilder(this.AppendSegmentToRequestUrl("delegatedAdminCustomers"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DelegatedAdminRelationships.
        /// </summary>
        /// <returns>The <see cref="ITenantRelationshipDelegatedAdminRelationshipsCollectionRequestBuilder"/>.</returns>
        public ITenantRelationshipDelegatedAdminRelationshipsCollectionRequestBuilder DelegatedAdminRelationships
        {
            get
            {
                return new TenantRelationshipDelegatedAdminRelationshipsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("delegatedAdminRelationships"), this.Client);
            }
        }
    
        /// <summary>
        /// Gets the request builder for TenantRelationshipFindTenantInformationByDomainName.
        /// </summary>
        /// <returns>The <see cref="ITenantRelationshipFindTenantInformationByDomainNameRequestBuilder"/>.</returns>
        public ITenantRelationshipFindTenantInformationByDomainNameRequestBuilder FindTenantInformationByDomainName(
            string domainName = null)
        {
            return new TenantRelationshipFindTenantInformationByDomainNameRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.findTenantInformationByDomainName"),
                this.Client,
                domainName);
        }

        /// <summary>
        /// Gets the request builder for TenantRelationshipFindTenantInformationByTenantId.
        /// </summary>
        /// <returns>The <see cref="ITenantRelationshipFindTenantInformationByTenantIdRequestBuilder"/>.</returns>
        public ITenantRelationshipFindTenantInformationByTenantIdRequestBuilder FindTenantInformationByTenantId(
            string tenantId = null)
        {
            return new TenantRelationshipFindTenantInformationByTenantIdRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.findTenantInformationByTenantId"),
                this.Client,
                tenantId);
        }
    
    }
}

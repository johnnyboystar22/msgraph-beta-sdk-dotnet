// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityRequestBuilder.cs.tt

namespace Microsoft.Graph.Networkaccess
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type ReportsRequestBuilder.
    /// </summary>
    public partial class ReportsRequestBuilder : Microsoft.Graph.EntityRequestBuilder, IReportsRequestBuilder
    {

        /// <summary>
        /// Constructs a new ReportsRequestBuilder.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="Microsoft.Graph.IBaseClient"/> for handling requests.</param>
        public ReportsRequestBuilder(
            string requestUrl,
            Microsoft.Graph.IBaseClient client)
            : base(requestUrl, client)
        {
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        public new IReportsRequest Request()
        {
            return this.Request(null);
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public new IReportsRequest Request(IEnumerable<Microsoft.Graph.Option> options)
        {
            return new ReportsRequest(this.RequestUrl, this.Client, options);
        }
    
        /// <summary>
        /// Gets the request builder for ReportsEntitiesSummaries.
        /// </summary>
        /// <returns>The <see cref="IReportsEntitiesSummariesRequestBuilder"/>.</returns>
        public IReportsEntitiesSummariesRequestBuilder EntitiesSummaries(
            DateTimeOffset startDateTime,
            DateTimeOffset endDateTime)
        {
            return new ReportsEntitiesSummariesRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.networkaccess.entitiesSummaries"),
                this.Client,
                startDateTime,
                endDateTime);
        }

        /// <summary>
        /// Gets the request builder for ReportsGetCrossTenantSummary.
        /// </summary>
        /// <returns>The <see cref="IReportsGetCrossTenantSummaryRequestBuilder"/>.</returns>
        public IReportsGetCrossTenantSummaryRequestBuilder GetCrossTenantSummary(
            DateTimeOffset startDateTime,
            DateTimeOffset endDateTime,
            DateTimeOffset discoveryPivotDateTime)
        {
            return new ReportsGetCrossTenantSummaryRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.networkaccess.getCrossTenantSummary"),
                this.Client,
                startDateTime,
                endDateTime,
                discoveryPivotDateTime);
        }

        /// <summary>
        /// Gets the request builder for ReportsGetDestinationSummaries.
        /// </summary>
        /// <returns>The <see cref="IReportsGetDestinationSummariesRequestBuilder"/>.</returns>
        public IReportsGetDestinationSummariesRequestBuilder GetDestinationSummaries(
            DateTimeOffset startDateTime,
            DateTimeOffset endDateTime,
            AggregationFilter aggregatedBy)
        {
            return new ReportsGetDestinationSummariesRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.networkaccess.getDestinationSummaries"),
                this.Client,
                startDateTime,
                endDateTime,
                aggregatedBy);
        }

        /// <summary>
        /// Gets the request builder for ReportsGetDeviceUsageSummary.
        /// </summary>
        /// <returns>The <see cref="IReportsGetDeviceUsageSummaryRequestBuilder"/>.</returns>
        public IReportsGetDeviceUsageSummaryRequestBuilder GetDeviceUsageSummary(
            DateTimeOffset startDateTime,
            DateTimeOffset endDateTime,
            DateTimeOffset activityPivotDateTime)
        {
            return new ReportsGetDeviceUsageSummaryRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.networkaccess.getDeviceUsageSummary"),
                this.Client,
                startDateTime,
                endDateTime,
                activityPivotDateTime);
        }

        /// <summary>
        /// Gets the request builder for ReportsTransactionSummaries.
        /// </summary>
        /// <returns>The <see cref="IReportsTransactionSummariesRequestBuilder"/>.</returns>
        public IReportsTransactionSummariesRequestBuilder TransactionSummaries(
            DateTimeOffset startDateTime,
            DateTimeOffset endDateTime)
        {
            return new ReportsTransactionSummariesRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.networkaccess.transactionSummaries"),
                this.Client,
                startDateTime,
                endDateTime);
        }
    
    }
}

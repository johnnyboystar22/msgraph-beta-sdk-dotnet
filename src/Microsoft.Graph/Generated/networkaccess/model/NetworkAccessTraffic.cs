// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph.Networkaccess
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Network Access Traffic.
    /// </summary>
    [JsonConverter(typeof(Microsoft.Graph.DerivedTypeConverter<NetworkAccessTraffic>))]
    public partial class NetworkAccessTraffic
    {
    
        /// <summary>
        /// Gets or sets agent version.
        /// Represents the version of the Global Secure Access client agent software. Supports $filter (eq) and $orderby.
        /// </summary>
        [JsonPropertyName("agentVersion")]
        public string AgentVersion { get; set; }
    
        /// <summary>
        /// Gets or sets connection id.
        /// Represents a unique identifier assigned to a connection. Supports $filter (eq) and $orderby.
        /// </summary>
        [JsonPropertyName("connectionId")]
        public string ConnectionId { get; set; }
    
        /// <summary>
        /// Gets or sets created date time.
        /// Represents the date and time when a network access traffic log entry was created. Supports $filter (eq) and $orderby.
        /// </summary>
        [JsonPropertyName("createdDateTime")]
        public DateTimeOffset? CreatedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets destination fqdn.
        /// Represents the Fully Qualified Domain Name (FQDN) of the destination host or server in a network communication. Supports $filter (eq) and $orderby.
        /// </summary>
        [JsonPropertyName("destinationFQDN")]
        public string DestinationFQDN { get; set; }
    
        /// <summary>
        /// Gets or sets destination ip.
        /// Represents the IP address of the destination host or server in a network communication. Supports $filter (eq) and $orderby.
        /// </summary>
        [JsonPropertyName("destinationIp")]
        public string DestinationIp { get; set; }
    
        /// <summary>
        /// Gets or sets destination port.
        /// Represents the network port number on the destination host or server in a network communication. Supports $filter (eq) and $orderby.
        /// </summary>
        [JsonPropertyName("destinationPort")]
        public Int32? DestinationPort { get; set; }
    
        /// <summary>
        /// Gets or sets device category.
        /// Represents the category classification of a device within a network infrastructure. The possible values are: client, branch, unknownFutureValue. Supports $filter (eq) and $orderby.
        /// </summary>
        [JsonPropertyName("deviceCategory")]
        public DeviceCategory? DeviceCategory { get; set; }
    
        /// <summary>
        /// Gets or sets device id.
        /// Represents a unique identifier assigned to a device within a network infrastructure. Supports $filter (eq) and $orderby.
        /// </summary>
        [JsonPropertyName("deviceId")]
        public string DeviceId { get; set; }
    
        /// <summary>
        /// Gets or sets device operating system.
        /// Represents the operating system installed on a device within a network infrastructure. Supports $filter (eq) and $orderby.
        /// </summary>
        [JsonPropertyName("deviceOperatingSystem")]
        public string DeviceOperatingSystem { get; set; }
    
        /// <summary>
        /// Gets or sets device operating system version.
        /// Represents the version or release number of the operating system installed on a device within a network infrastructure. Supports $filter (eq) and $orderby.
        /// </summary>
        [JsonPropertyName("deviceOperatingSystemVersion")]
        public string DeviceOperatingSystemVersion { get; set; }
    
        /// <summary>
        /// Gets or sets headers.
        /// Represents the headers included in a network request or response. Supports $filter (eq) and $orderby.
        /// </summary>
        [JsonPropertyName("headers")]
        public Headers Headers { get; set; }
    
        /// <summary>
        /// Gets or sets network protocol.
        /// Represents the networking protocol used for communication.The possible values are: ip, icmp, igmp, ggp, ipv4, tcp, pup, udp, idp, ipv6, ipv6RoutingHeader, ipv6FragmentHeader, ipSecEncapsulatingSecurityPayload, ipSecAuthenticationHeader, icmpV6, ipv6NoNextHeader, ipv6DestinationOptions, nd, raw, ipx, spx, spxII, unknownFutureValue. Supports $filter (eq) and $orderby.
        /// </summary>
        [JsonPropertyName("networkProtocol")]
        public NetworkingProtocol? NetworkProtocol { get; set; }
    
        /// <summary>
        /// Gets or sets policy id.
        /// Represents a unique identifier assigned to a policy. Supports $filter (eq) and $orderby.
        /// </summary>
        [JsonPropertyName("policyId")]
        public string PolicyId { get; set; }
    
        /// <summary>
        /// Gets or sets policy rule id.
        /// Represents a unique identifier assigned to a policy rule. Supports $filter (eq) and $orderby.
        /// </summary>
        [JsonPropertyName("policyRuleId")]
        public string PolicyRuleId { get; set; }
    
        /// <summary>
        /// Gets or sets received bytes.
        /// Represents the total number of bytes received in a network communication or data transfer. Supports $filter (eq) and $orderby.
        /// </summary>
        [JsonPropertyName("receivedBytes")]
        public Int64? ReceivedBytes { get; set; }
    
        /// <summary>
        /// Gets or sets sent bytes.
        /// Represents the total number of bytes sent in a network communication or data transfer. Supports $filter (eq) and $orderby.
        /// </summary>
        [JsonPropertyName("sentBytes")]
        public Int64? SentBytes { get; set; }
    
        /// <summary>
        /// Gets or sets session id.
        /// Represents a unique identifier assigned to a session or connection within a network infrastructure. Supports $filter (eq) and $orderby.
        /// </summary>
        [JsonPropertyName("sessionId")]
        public string SessionId { get; set; }
    
        /// <summary>
        /// Gets or sets source ip.
        /// Represents the source IP address in a network communication. Supports $filter (eq) and $orderby.
        /// </summary>
        [JsonPropertyName("sourceIp")]
        public string SourceIp { get; set; }
    
        /// <summary>
        /// Gets or sets source port.
        /// Represents the network port number on the source host or device in a network communication. Supports $filter (eq) and $orderby.
        /// </summary>
        [JsonPropertyName("sourcePort")]
        public Int32? SourcePort { get; set; }
    
        /// <summary>
        /// Gets or sets tenant id.
        /// Represents a unique identifier assigned to a tenant within a network infrastructure. Supports $filter (eq) and $orderby.
        /// </summary>
        [JsonPropertyName("tenantId")]
        public string TenantId { get; set; }
    
        /// <summary>
        /// Gets or sets traffic type.
        /// Represents the type or category of network traffic.The possible values are: internet, private, microsoft365, all, unknownFutureValue. Supports $filter (eq) and $orderby.
        /// </summary>
        [JsonPropertyName("trafficType")]
        public TrafficType? TrafficType { get; set; }
    
        /// <summary>
        /// Gets or sets transaction id.
        /// Represents a unique identifier assigned to a specific transaction or operation. Key. Supports $filter (eq) and $orderby.
        /// </summary>
        [JsonPropertyName("transactionId")]
        public string TransactionId { get; set; }
    
        /// <summary>
        /// Gets or sets transport protocol.
        /// Represents the transport protocol used for communication.The possible values are: ip, icmp, igmp, ggp, ipv4, tcp, pup, udp, idp, ipv6, ipv6RoutingHeader, ipv6FragmentHeader, ipSecEncapsulatingSecurityPayload, ipSecAuthenticationHeader, icmpV6, ipv6NoNextHeader, ipv6DestinationOptions, nd, raw, ipx, spx, spxII, unknownFutureValue. Supports $filter (eq) and $orderby.
        /// </summary>
        [JsonPropertyName("transportProtocol")]
        public NetworkingProtocol? TransportProtocol { get; set; }
    
        /// <summary>
        /// Gets or sets user id.
        /// Represents a unique identifier assigned to a user. Supports $filter (eq) and $orderby.
        /// </summary>
        [JsonPropertyName("userId")]
        public string UserId { get; set; }
    
        /// <summary>
        /// Gets or sets user principal name.
        /// Represents the user principal name (UPN) associated with a user. Supports $filter (eq) and $orderby.
        /// </summary>
        [JsonPropertyName("userPrincipalName")]
        public string UserPrincipalName { get; set; }
    
        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }

        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }
    
    }
}


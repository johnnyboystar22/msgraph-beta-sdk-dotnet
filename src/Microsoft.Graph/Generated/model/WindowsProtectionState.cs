// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Windows Protection State.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<WindowsProtectionState>))]
    public partial class WindowsProtectionState : Entity
    {
    
        /// <summary>
        /// Gets or sets anti malware version.
        /// Current anti malware version
        /// </summary>
        [JsonPropertyName("antiMalwareVersion")]
        public string AntiMalwareVersion { get; set; }
    
        /// <summary>
        /// Gets or sets device state.
        /// Indicates device's health state. Possible values are: clean, fullScanPending, rebootPending, manualStepsPending, offlineScanPending, critical. Possible values are: clean, fullScanPending, rebootPending, manualStepsPending, offlineScanPending, critical.
        /// </summary>
        [JsonPropertyName("deviceState")]
        public WindowsDeviceHealthState? DeviceState { get; set; }
    
        /// <summary>
        /// Gets or sets engine version.
        /// Current endpoint protection engine's version
        /// </summary>
        [JsonPropertyName("engineVersion")]
        public string EngineVersion { get; set; }
    
        /// <summary>
        /// Gets or sets full scan overdue.
        /// When TRUE indicates full scan is overdue, when FALSE indicates full scan is not overdue. Defaults to setting on client device.
        /// </summary>
        [JsonPropertyName("fullScanOverdue")]
        public bool? FullScanOverdue { get; set; }
    
        /// <summary>
        /// Gets or sets full scan required.
        /// When TRUE indicates full scan is required, when FALSE indicates full scan is not required. Defaults to setting on client device.
        /// </summary>
        [JsonPropertyName("fullScanRequired")]
        public bool? FullScanRequired { get; set; }
    
        /// <summary>
        /// Gets or sets is virtual machine.
        /// When TRUE indicates the device is a virtual machine, when FALSE indicates the device is not a virtual machine. Defaults to setting on client device.
        /// </summary>
        [JsonPropertyName("isVirtualMachine")]
        public bool? IsVirtualMachine { get; set; }
    
        /// <summary>
        /// Gets or sets last full scan date time.
        /// Last quick scan datetime
        /// </summary>
        [JsonPropertyName("lastFullScanDateTime")]
        public DateTimeOffset? LastFullScanDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets last full scan signature version.
        /// Last full scan signature version
        /// </summary>
        [JsonPropertyName("lastFullScanSignatureVersion")]
        public string LastFullScanSignatureVersion { get; set; }
    
        /// <summary>
        /// Gets or sets last quick scan date time.
        /// Last quick scan datetime
        /// </summary>
        [JsonPropertyName("lastQuickScanDateTime")]
        public DateTimeOffset? LastQuickScanDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets last quick scan signature version.
        /// Last quick scan signature version
        /// </summary>
        [JsonPropertyName("lastQuickScanSignatureVersion")]
        public string LastQuickScanSignatureVersion { get; set; }
    
        /// <summary>
        /// Gets or sets last reported date time.
        /// Last device health status reported time
        /// </summary>
        [JsonPropertyName("lastReportedDateTime")]
        public DateTimeOffset? LastReportedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets malware protection enabled.
        /// When TRUE indicates anti malware is enabled when FALSE indicates anti malware is not enabled.
        /// </summary>
        [JsonPropertyName("malwareProtectionEnabled")]
        public bool? MalwareProtectionEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets network inspection system enabled.
        /// When TRUE indicates network inspection system enabled, when FALSE indicates network inspection system is not enabled. Defaults to setting on client device.
        /// </summary>
        [JsonPropertyName("networkInspectionSystemEnabled")]
        public bool? NetworkInspectionSystemEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets product status.
        /// Product Status of Windows Defender Antivirus. Possible values are: noStatus, serviceNotRunning, serviceStartedWithoutMalwareProtection, pendingFullScanDueToThreatAction, pendingRebootDueToThreatAction, pendingManualStepsDueToThreatAction, avSignaturesOutOfDate, asSignaturesOutOfDate, noQuickScanHappenedForSpecifiedPeriod, noFullScanHappenedForSpecifiedPeriod, systemInitiatedScanInProgress, systemInitiatedCleanInProgress, samplesPendingSubmission, productRunningInEvaluationMode, productRunningInNonGenuineMode, productExpired, offlineScanRequired, serviceShutdownAsPartOfSystemShutdown, threatRemediationFailedCritically, threatRemediationFailedNonCritically, noStatusFlagsSet, platformOutOfDate, platformUpdateInProgress, platformAboutToBeOutdated, signatureOrPlatformEndOfLifeIsPastOrIsImpending, windowsSModeSignaturesInUseOnNonWin10SInstall. Possible values are: noStatus, serviceNotRunning, serviceStartedWithoutMalwareProtection, pendingFullScanDueToThreatAction, pendingRebootDueToThreatAction, pendingManualStepsDueToThreatAction, avSignaturesOutOfDate, asSignaturesOutOfDate, noQuickScanHappenedForSpecifiedPeriod, noFullScanHappenedForSpecifiedPeriod, systemInitiatedScanInProgress, systemInitiatedCleanInProgress, samplesPendingSubmission, productRunningInEvaluationMode, productRunningInNonGenuineMode, productExpired, offlineScanRequired, serviceShutdownAsPartOfSystemShutdown, threatRemediationFailedCritically, threatRemediationFailedNonCritically, noStatusFlagsSet, platformOutOfDate, platformUpdateInProgress, platformAboutToBeOutdated, signatureOrPlatformEndOfLifeIsPastOrIsImpending, windowsSModeSignaturesInUseOnNonWin10SInstall.
        /// </summary>
        [JsonPropertyName("productStatus")]
        public WindowsDefenderProductStatus? ProductStatus { get; set; }
    
        /// <summary>
        /// Gets or sets quick scan overdue.
        /// When TRUE indicates quick scan is overdue, when FALSE indicates quick scan is not overdue. Defaults to setting on client device.
        /// </summary>
        [JsonPropertyName("quickScanOverdue")]
        public bool? QuickScanOverdue { get; set; }
    
        /// <summary>
        /// Gets or sets real time protection enabled.
        /// When TRUE indicates real time protection is enabled, when FALSE indicates real time protection is not enabled. Defaults to setting on client device.
        /// </summary>
        [JsonPropertyName("realTimeProtectionEnabled")]
        public bool? RealTimeProtectionEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets reboot required.
        /// When TRUE indicates reboot is required, when FALSE indicates when TRUE indicates reboot is not required. Defaults to setting on client device.
        /// </summary>
        [JsonPropertyName("rebootRequired")]
        public bool? RebootRequired { get; set; }
    
        /// <summary>
        /// Gets or sets signature update overdue.
        /// When TRUE indicates signature is out of date, when FALSE indicates signature is not out of date. Defaults to setting on client device.
        /// </summary>
        [JsonPropertyName("signatureUpdateOverdue")]
        public bool? SignatureUpdateOverdue { get; set; }
    
        /// <summary>
        /// Gets or sets signature version.
        /// Current malware definitions version
        /// </summary>
        [JsonPropertyName("signatureVersion")]
        public string SignatureVersion { get; set; }
    
        /// <summary>
        /// Gets or sets tamper protection enabled.
        /// When TRUE indicates the Windows Defender tamper protection feature is enabled, when FALSE indicates the Windows Defender tamper protection feature is not enabled. Defaults to setting on client device.
        /// </summary>
        [JsonPropertyName("tamperProtectionEnabled")]
        public bool? TamperProtectionEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets detected malware state.
        /// Device malware list
        /// </summary>
        [JsonPropertyName("detectedMalwareState")]
        public IWindowsProtectionStateDetectedMalwareStateCollectionPage DetectedMalwareState { get; set; }

        /// <summary>
        /// Gets or sets detectedMalwareStateNextLink.
        /// </summary>
        [JsonPropertyName("detectedMalwareState@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string DetectedMalwareStateNextLink { get; set; }
    
    }
}


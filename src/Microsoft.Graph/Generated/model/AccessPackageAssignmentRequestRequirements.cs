// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type AccessPackageAssignmentRequestRequirements.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<AccessPackageAssignmentRequestRequirements>))]
    public partial class AccessPackageAssignmentRequestRequirements
    {

        /// <summary>
        /// Gets or sets existingAnswers.
        /// Answers that have already been provided.
        /// </summary>
        [JsonPropertyName("existingAnswers")]
        public IEnumerable<AccessPackageAnswer> ExistingAnswers { get; set; }
    
        /// <summary>
        /// Gets or sets isApprovalRequired.
        /// Indicates whether a request must be approved by an approver.
        /// </summary>
        [JsonPropertyName("isApprovalRequired")]
        public bool? IsApprovalRequired { get; set; }
    
        /// <summary>
        /// Gets or sets isApprovalRequiredForExtension.
        /// Indicates whether approval is required when a user tries to extend their access.
        /// </summary>
        [JsonPropertyName("isApprovalRequiredForExtension")]
        public bool? IsApprovalRequiredForExtension { get; set; }
    
        /// <summary>
        /// Gets or sets isCustomAssignmentScheduleAllowed.
        /// Indicates whether the requestor is allowed to set a custom schedule.
        /// </summary>
        [JsonPropertyName("isCustomAssignmentScheduleAllowed")]
        public bool? IsCustomAssignmentScheduleAllowed { get; set; }
    
        /// <summary>
        /// Gets or sets isRequestorJustificationRequired.
        /// Indicates whether a requestor must supply justification when submitting an assignment request.
        /// </summary>
        [JsonPropertyName("isRequestorJustificationRequired")]
        public bool? IsRequestorJustificationRequired { get; set; }
    
        /// <summary>
        /// Gets or sets policyDescription.
        /// The description of the policy that the user is trying to request access using.
        /// </summary>
        [JsonPropertyName("policyDescription")]
        public string PolicyDescription { get; set; }
    
        /// <summary>
        /// Gets or sets policyDisplayName.
        /// The display name of the policy that the user is trying to request access using.
        /// </summary>
        [JsonPropertyName("policyDisplayName")]
        public string PolicyDisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets policyId.
        /// The identifier of the policy that these requirements are associated with. This identifier can be used when creating a new assignment request.
        /// </summary>
        [JsonPropertyName("policyId")]
        public string PolicyId { get; set; }
    
        /// <summary>
        /// Gets or sets questions.
        /// Questions that are configured on the policy. The questions can be required or optional; callers can determine whether a question is required or optional based on the isRequired property on accessPackageQuestion.
        /// </summary>
        [JsonPropertyName("questions")]
        public IEnumerable<AccessPackageQuestion> Questions { get; set; }
    
        /// <summary>
        /// Gets or sets schedule.
        /// Schedule restrictions enforced, if any.
        /// </summary>
        [JsonPropertyName("schedule")]
        public RequestSchedule Schedule { get; set; }
    
        /// <summary>
        /// Gets or sets verifiableCredentialRequirementStatus.
        /// The status of the process to process the verifiable credential, if any.
        /// </summary>
        [JsonPropertyName("verifiableCredentialRequirementStatus")]
        public VerifiableCredentialRequirementStatus VerifiableCredentialRequirementStatus { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}

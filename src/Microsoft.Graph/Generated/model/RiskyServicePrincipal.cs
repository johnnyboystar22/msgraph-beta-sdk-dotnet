// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Risky Service Principal.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<RiskyServicePrincipal>))]
    public partial class RiskyServicePrincipal : Entity
    {
    
        /// <summary>
        /// Gets or sets account enabled.
        /// true if the service principal account is enabled; otherwise, false.
        /// </summary>
        [Obsolete("The accountEnabled field will soon be deprecated on 2023-07-12. Please use isEnabled instead.")]
        [JsonPropertyName("accountEnabled")]
        public bool? AccountEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets app id.
        /// The globally unique identifier for the associated application (its appId property), if any.
        /// </summary>
        [JsonPropertyName("appId")]
        public string AppId { get; set; }
    
        /// <summary>
        /// Gets or sets display name.
        /// The display name for the service principal.
        /// </summary>
        [JsonPropertyName("displayName")]
        public string DisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets is enabled.
        /// </summary>
        [JsonPropertyName("isEnabled")]
        public bool? IsEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets is processing.
        /// Indicates whether Azure AD is currently processing the service principal's risky state.
        /// </summary>
        [JsonPropertyName("isProcessing")]
        public bool? IsProcessing { get; set; }
    
        /// <summary>
        /// Gets or sets risk detail.
        /// Details of the detected risk. Note: Details for this property are only available for Workload Identities Premium customers. Events in tenants without this license will be returned hidden. The possible values are: none, hidden,  unknownFutureValue, adminConfirmedServicePrincipalCompromised, adminDismissedAllRiskForServicePrincipal. Note that you must use the Prefer: include-unknown-enum-members request header to get the following value(s) in this evolvable enum: adminConfirmedServicePrincipalCompromised , adminDismissedAllRiskForServicePrincipal.
        /// </summary>
        [JsonPropertyName("riskDetail")]
        public RiskDetail? RiskDetail { get; set; }
    
        /// <summary>
        /// Gets or sets risk last updated date time.
        /// The date and time that the risk state was last updated. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2021 is 2021-01-01T00:00:00Z. Supports $filter (eq).
        /// </summary>
        [JsonPropertyName("riskLastUpdatedDateTime")]
        public DateTimeOffset? RiskLastUpdatedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets risk level.
        /// Level of the detected risky workload identity. The possible values are: low, medium, high, hidden, none, unknownFutureValue. Supports $filter (eq).
        /// </summary>
        [JsonPropertyName("riskLevel")]
        public RiskLevel? RiskLevel { get; set; }
    
        /// <summary>
        /// Gets or sets risk state.
        /// State of the service principal's risk. The possible values are: none, confirmedSafe, remediated, dismissed, atRisk, confirmedCompromised, unknownFutureValue.
        /// </summary>
        [JsonPropertyName("riskState")]
        public RiskState? RiskState { get; set; }
    
        /// <summary>
        /// Gets or sets service principal type.
        /// Identifies whether the service principal represents an Application, a ManagedIdentity, or a legacy application (socialIdp). This is set by Azure AD internally and is inherited from servicePrincipal.
        /// </summary>
        [JsonPropertyName("servicePrincipalType")]
        public string ServicePrincipalType { get; set; }
    
        /// <summary>
        /// Gets or sets history.
        /// Represents the risk history of Azure AD service principals.
        /// </summary>
        [JsonPropertyName("history")]
        public IRiskyServicePrincipalHistoryCollectionPage History { get; set; }

        /// <summary>
        /// Gets or sets historyNextLink.
        /// </summary>
        [JsonPropertyName("history@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string HistoryNextLink { get; set; }
    
    }
}


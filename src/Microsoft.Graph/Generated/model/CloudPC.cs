// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Cloud PC.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<CloudPC>))]
    public partial class CloudPC : Entity
    {
    
        /// <summary>
        /// Gets or sets aad device id.
        /// The Azure Active Directory (Azure AD) device ID of the Cloud PC.
        /// </summary>
        [JsonPropertyName("aadDeviceId")]
        public string AadDeviceId { get; set; }
    
        /// <summary>
        /// Gets or sets connectivity result.
        /// The connectivity health check result of a Cloud PC, including the updated timestamp and whether the Cloud PC can be connected.
        /// </summary>
        [JsonPropertyName("connectivityResult")]
        public CloudPcConnectivityResult ConnectivityResult { get; set; }
    
        /// <summary>
        /// Gets or sets disk encryption state.
        /// The disk encryption applied to the Cloud PC. Possible values: notAvailable, notEncrypted, encryptedUsingPlatformManagedKey, encryptedUsingCustomerManagedKey, and unknownFutureValue.
        /// </summary>
        [JsonPropertyName("diskEncryptionState")]
        public CloudPcDiskEncryptionState? DiskEncryptionState { get; set; }
    
        /// <summary>
        /// Gets or sets display name.
        /// The display name of the Cloud PC.
        /// </summary>
        [JsonPropertyName("displayName")]
        public string DisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets grace period end date time.
        /// The date and time when the grace period ends and reprovisioning/deprovisioning happens. Required only if the status is inGracePeriod. The timestamp is shown in ISO 8601 format and Coordinated Universal Time (UTC). For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
        /// </summary>
        [JsonPropertyName("gracePeriodEndDateTime")]
        public DateTimeOffset? GracePeriodEndDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets image display name.
        /// Name of the OS image that's on the Cloud PC.
        /// </summary>
        [JsonPropertyName("imageDisplayName")]
        public string ImageDisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets last login result.
        /// The last login result of the Cloud PC. For example, { 'time': '2014-01-01T00:00:00Z'}.
        /// </summary>
        [JsonPropertyName("lastLoginResult")]
        public CloudPcLoginResult LastLoginResult { get; set; }
    
        /// <summary>
        /// Gets or sets last modified date time.
        /// The last modified date and time of the Cloud PC. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
        /// </summary>
        [JsonPropertyName("lastModifiedDateTime")]
        public DateTimeOffset? LastModifiedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets last remote action result.
        /// The last remote action result of the enterprise Cloud PCs. The supported remote actions are: Reboot, Rename, Reprovision, Restore, and Troubleshoot.
        /// </summary>
        [JsonPropertyName("lastRemoteActionResult")]
        public CloudPcRemoteActionResult LastRemoteActionResult { get; set; }
    
        /// <summary>
        /// Gets or sets managed device id.
        /// The Intune device ID of the Cloud PC.
        /// </summary>
        [JsonPropertyName("managedDeviceId")]
        public string ManagedDeviceId { get; set; }
    
        /// <summary>
        /// Gets or sets managed device name.
        /// The Intune device name of the Cloud PC.
        /// </summary>
        [JsonPropertyName("managedDeviceName")]
        public string ManagedDeviceName { get; set; }
    
        /// <summary>
        /// Gets or sets on premises connection name.
        /// The Azure network connection that is applied during the provisioning of Cloud PCs.
        /// </summary>
        [JsonPropertyName("onPremisesConnectionName")]
        public string OnPremisesConnectionName { get; set; }
    
        /// <summary>
        /// Gets or sets os version.
        /// The version of the operating system (OS) to provision on Cloud PCs. Possible values are: windows10, windows11, and unknownFutureValue.
        /// </summary>
        [JsonPropertyName("osVersion")]
        public CloudPcOperatingSystem? OsVersion { get; set; }
    
        /// <summary>
        /// Gets or sets partner agent install results.
        /// The results of every partner agent's installation status on Cloud PC.
        /// </summary>
        [JsonPropertyName("partnerAgentInstallResults")]
        public IEnumerable<CloudPcPartnerAgentInstallResult> PartnerAgentInstallResults { get; set; }
    
        /// <summary>
        /// Gets or sets power state.
        /// </summary>
        [JsonPropertyName("powerState")]
        public CloudPcPowerState? PowerState { get; set; }
    
        /// <summary>
        /// Gets or sets provisioning policy id.
        /// The provisioning policy ID of the Cloud PC.
        /// </summary>
        [JsonPropertyName("provisioningPolicyId")]
        public string ProvisioningPolicyId { get; set; }
    
        /// <summary>
        /// Gets or sets provisioning policy name.
        /// The provisioning policy that is applied during the provisioning of Cloud PCs.
        /// </summary>
        [JsonPropertyName("provisioningPolicyName")]
        public string ProvisioningPolicyName { get; set; }
    
        /// <summary>
        /// Gets or sets provisioning type.
        /// The type of licenses to be used when provisioning Cloud PCs using this policy. Possible values are: dedicated, shared, unknownFutureValue. Default value is dedicated.
        /// </summary>
        [JsonPropertyName("provisioningType")]
        public CloudPcProvisioningType? ProvisioningType { get; set; }
    
        /// <summary>
        /// Gets or sets service plan id.
        /// The service plan ID of the Cloud PC.
        /// </summary>
        [JsonPropertyName("servicePlanId")]
        public string ServicePlanId { get; set; }
    
        /// <summary>
        /// Gets or sets service plan name.
        /// The service plan name of the Cloud PC.
        /// </summary>
        [JsonPropertyName("servicePlanName")]
        public string ServicePlanName { get; set; }
    
        /// <summary>
        /// Gets or sets service plan type.
        /// The service plan type of the Cloud PC.
        /// </summary>
        [JsonPropertyName("servicePlanType")]
        public CloudPcServicePlanType? ServicePlanType { get; set; }
    
        /// <summary>
        /// Gets or sets status.
        /// The status of the Cloud PC. Possible values are: notProvisioned, provisioning, provisioned, upgrading, inGracePeriod, deprovisioning, failed, restoring.
        /// </summary>
        [JsonPropertyName("status")]
        public CloudPcStatus? Status { get; set; }
    
        /// <summary>
        /// Gets or sets status details.
        /// The details of the Cloud PC status.
        /// </summary>
        [JsonPropertyName("statusDetails")]
        public CloudPcStatusDetails StatusDetails { get; set; }
    
        /// <summary>
        /// Gets or sets user account type.
        /// The account type of the user on provisioned Cloud PCs. Possible values are: standardUser, administrator, and unknownFutureValue.
        /// </summary>
        [JsonPropertyName("userAccountType")]
        public CloudPcUserAccountType? UserAccountType { get; set; }
    
        /// <summary>
        /// Gets or sets user principal name.
        /// The user principal name (UPN) of the user assigned to the Cloud PC.
        /// </summary>
        [JsonPropertyName("userPrincipalName")]
        public string UserPrincipalName { get; set; }
    
    }
}


// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Windows10Compliance Policy.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<Windows10CompliancePolicy>))]
    public partial class Windows10CompliancePolicy : DeviceCompliancePolicy
    {
    
        ///<summary>
        /// The Windows10CompliancePolicy constructor
        ///</summary>
        public Windows10CompliancePolicy()
        {
            this.ODataType = "microsoft.graph.windows10CompliancePolicy";
        }

        /// <summary>
        /// Gets or sets active firewall required.
        /// Require active firewall on Windows devices.
        /// </summary>
        [JsonPropertyName("activeFirewallRequired")]
        public bool? ActiveFirewallRequired { get; set; }
    
        /// <summary>
        /// Gets or sets anti spyware required.
        /// Require any AntiSpyware solution registered with Windows Decurity Center to be on and monitoring (e.g. Symantec, Windows Defender).
        /// </summary>
        [JsonPropertyName("antiSpywareRequired")]
        public bool? AntiSpywareRequired { get; set; }
    
        /// <summary>
        /// Gets or sets antivirus required.
        /// Require any Antivirus solution registered with Windows Decurity Center to be on and monitoring (e.g. Symantec, Windows Defender).
        /// </summary>
        [JsonPropertyName("antivirusRequired")]
        public bool? AntivirusRequired { get; set; }
    
        /// <summary>
        /// Gets or sets bit locker enabled.
        /// Require devices to be reported healthy by Windows Device Health Attestation - bit locker is enabled
        /// </summary>
        [JsonPropertyName("bitLockerEnabled")]
        public bool? BitLockerEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets code integrity enabled.
        /// Require devices to be reported as healthy by Windows Device Health Attestation.
        /// </summary>
        [JsonPropertyName("codeIntegrityEnabled")]
        public bool? CodeIntegrityEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets configuration manager compliance required.
        /// Require to consider SCCM Compliance state into consideration for Intune Compliance State.
        /// </summary>
        [JsonPropertyName("configurationManagerComplianceRequired")]
        public bool? ConfigurationManagerComplianceRequired { get; set; }
    
        /// <summary>
        /// Gets or sets defender enabled.
        /// Require Windows Defender Antimalware on Windows devices.
        /// </summary>
        [JsonPropertyName("defenderEnabled")]
        public bool? DefenderEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets defender version.
        /// Require Windows Defender Antimalware minimum version on Windows devices.
        /// </summary>
        [JsonPropertyName("defenderVersion")]
        public string DefenderVersion { get; set; }
    
        /// <summary>
        /// Gets or sets device compliance policy script.
        /// Not yet documented
        /// </summary>
        [JsonPropertyName("deviceCompliancePolicyScript")]
        public DeviceCompliancePolicyScript DeviceCompliancePolicyScript { get; set; }
    
        /// <summary>
        /// Gets or sets device threat protection enabled.
        /// Require that devices have enabled device threat protection.
        /// </summary>
        [JsonPropertyName("deviceThreatProtectionEnabled")]
        public bool? DeviceThreatProtectionEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets device threat protection required security level.
        /// Require Device Threat Protection minimum risk level to report noncompliance. Possible values are: unavailable, secured, low, medium, high, notSet.
        /// </summary>
        [JsonPropertyName("deviceThreatProtectionRequiredSecurityLevel")]
        public DeviceThreatProtectionLevel? DeviceThreatProtectionRequiredSecurityLevel { get; set; }
    
        /// <summary>
        /// Gets or sets early launch anti malware driver enabled.
        /// Require devices to be reported as healthy by Windows Device Health Attestation - early launch antimalware driver is enabled.
        /// </summary>
        [JsonPropertyName("earlyLaunchAntiMalwareDriverEnabled")]
        public bool? EarlyLaunchAntiMalwareDriverEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets firmware protection enabled.
        /// When TRUE, indicates that Firmware protection is required to be reported as healthy by Microsoft Azure Attestion. When FALSE, indicates that Firmware protection is not required to be reported as healthy. Devices that support either Dynamic Root of Trust for Measurement (DRTM) or Firmware Attack Surface Reduction (FASR) will report compliant for this setting. Default value is FALSE.
        /// </summary>
        [JsonPropertyName("firmwareProtectionEnabled")]
        public bool? FirmwareProtectionEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets kernel dma protection enabled.
        /// When TRUE, indicates that Kernel Direct Memory Access (DMA) protection is required to be reported as healthy by Microsoft Azure Attestion. When FALSE, indicates that Kernel DMA Protection is not required to be reported as healthy. Default value is FALSE.
        /// </summary>
        [JsonPropertyName("kernelDmaProtectionEnabled")]
        public bool? KernelDmaProtectionEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets memory integrity enabled.
        /// When TRUE, indicates that Memory Integrity as known as Hypervisor-protected Code Integrity (HVCI) or Hypervisor Enforced Code Integrity protection is required to be reported as healthy by Microsoft Azure Attestion. When FALSE, indicates that Memory Integrity Protection is not required to be reported as healthy. Default value is FALSE.
        /// </summary>
        [JsonPropertyName("memoryIntegrityEnabled")]
        public bool? MemoryIntegrityEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets mobile os maximum version.
        /// Maximum Windows Phone version.
        /// </summary>
        [JsonPropertyName("mobileOsMaximumVersion")]
        public string MobileOsMaximumVersion { get; set; }
    
        /// <summary>
        /// Gets or sets mobile os minimum version.
        /// Minimum Windows Phone version.
        /// </summary>
        [JsonPropertyName("mobileOsMinimumVersion")]
        public string MobileOsMinimumVersion { get; set; }
    
        /// <summary>
        /// Gets or sets os maximum version.
        /// Maximum Windows 10 version.
        /// </summary>
        [JsonPropertyName("osMaximumVersion")]
        public string OsMaximumVersion { get; set; }
    
        /// <summary>
        /// Gets or sets os minimum version.
        /// Minimum Windows 10 version.
        /// </summary>
        [JsonPropertyName("osMinimumVersion")]
        public string OsMinimumVersion { get; set; }
    
        /// <summary>
        /// Gets or sets password block simple.
        /// Indicates whether or not to block simple password.
        /// </summary>
        [JsonPropertyName("passwordBlockSimple")]
        public bool? PasswordBlockSimple { get; set; }
    
        /// <summary>
        /// Gets or sets password expiration days.
        /// The password expiration in days.
        /// </summary>
        [JsonPropertyName("passwordExpirationDays")]
        public Int32? PasswordExpirationDays { get; set; }
    
        /// <summary>
        /// Gets or sets password minimum character set count.
        /// The number of character sets required in the password.
        /// </summary>
        [JsonPropertyName("passwordMinimumCharacterSetCount")]
        public Int32? PasswordMinimumCharacterSetCount { get; set; }
    
        /// <summary>
        /// Gets or sets password minimum length.
        /// The minimum password length.
        /// </summary>
        [JsonPropertyName("passwordMinimumLength")]
        public Int32? PasswordMinimumLength { get; set; }
    
        /// <summary>
        /// Gets or sets password minutes of inactivity before lock.
        /// Minutes of inactivity before a password is required.
        /// </summary>
        [JsonPropertyName("passwordMinutesOfInactivityBeforeLock")]
        public Int32? PasswordMinutesOfInactivityBeforeLock { get; set; }
    
        /// <summary>
        /// Gets or sets password previous password block count.
        /// The number of previous passwords to prevent re-use of.
        /// </summary>
        [JsonPropertyName("passwordPreviousPasswordBlockCount")]
        public Int32? PasswordPreviousPasswordBlockCount { get; set; }
    
        /// <summary>
        /// Gets or sets password required.
        /// Require a password to unlock Windows device.
        /// </summary>
        [JsonPropertyName("passwordRequired")]
        public bool? PasswordRequired { get; set; }
    
        /// <summary>
        /// Gets or sets password required to unlock from idle.
        /// Require a password to unlock an idle device.
        /// </summary>
        [JsonPropertyName("passwordRequiredToUnlockFromIdle")]
        public bool? PasswordRequiredToUnlockFromIdle { get; set; }
    
        /// <summary>
        /// Gets or sets password required type.
        /// The required password type. Possible values are: deviceDefault, alphanumeric, numeric.
        /// </summary>
        [JsonPropertyName("passwordRequiredType")]
        public RequiredPasswordType? PasswordRequiredType { get; set; }
    
        /// <summary>
        /// Gets or sets require healthy device report.
        /// Require devices to be reported as healthy by Windows Device Health Attestation.
        /// </summary>
        [JsonPropertyName("requireHealthyDeviceReport")]
        public bool? RequireHealthyDeviceReport { get; set; }
    
        /// <summary>
        /// Gets or sets rtp enabled.
        /// Require Windows Defender Antimalware Real-Time Protection on Windows devices.
        /// </summary>
        [JsonPropertyName("rtpEnabled")]
        public bool? RtpEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets secure boot enabled.
        /// Require devices to be reported as healthy by Windows Device Health Attestation - secure boot is enabled.
        /// </summary>
        [JsonPropertyName("secureBootEnabled")]
        public bool? SecureBootEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets signature out of date.
        /// Require Windows Defender Antimalware Signature to be up to date on Windows devices.
        /// </summary>
        [JsonPropertyName("signatureOutOfDate")]
        public bool? SignatureOutOfDate { get; set; }
    
        /// <summary>
        /// Gets or sets storage require encryption.
        /// Require encryption on windows devices.
        /// </summary>
        [JsonPropertyName("storageRequireEncryption")]
        public bool? StorageRequireEncryption { get; set; }
    
        /// <summary>
        /// Gets or sets tpm required.
        /// Require Trusted Platform Module(TPM) to be present.
        /// </summary>
        [JsonPropertyName("tpmRequired")]
        public bool? TpmRequired { get; set; }
    
        /// <summary>
        /// Gets or sets valid operating system build ranges.
        /// The valid operating system build ranges on Windows devices. This collection can contain a maximum of 10000 elements.
        /// </summary>
        [JsonPropertyName("validOperatingSystemBuildRanges")]
        public IEnumerable<OperatingSystemVersionRange> ValidOperatingSystemBuildRanges { get; set; }
    
        /// <summary>
        /// Gets or sets virtualization based security enabled.
        /// When TRUE, indicates that Virtualization-based Security is required to be reported as healthy by Microsoft Azure Attestion. When FALSE, indicates that Virtualization-based Security is not required to be reported as healthy. Default value is FALSE.
        /// </summary>
        [JsonPropertyName("virtualizationBasedSecurityEnabled")]
        public bool? VirtualizationBasedSecurityEnabled { get; set; }
    
    }
}


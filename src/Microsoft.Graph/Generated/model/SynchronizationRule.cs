// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type SynchronizationRule.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<SynchronizationRule>))]
    public partial class SynchronizationRule
    {

        /// <summary>
        /// Gets or sets containerFilter.
        /// </summary>
        [JsonPropertyName("containerFilter")]
        public ContainerFilter ContainerFilter { get; set; }
    
        /// <summary>
        /// Gets or sets editable.
        /// true if the synchronization rule can be customized; false if this rule is read-only and should not be changed.
        /// </summary>
        [JsonPropertyName("editable")]
        public bool? Editable { get; set; }
    
        /// <summary>
        /// Gets or sets groupFilter.
        /// </summary>
        [JsonPropertyName("groupFilter")]
        public GroupFilter GroupFilter { get; set; }
    
        /// <summary>
        /// Gets or sets id.
        /// Synchronization rule identifier. Must be one of the identifiers recognized by the synchronization engine. Supported rule identifiers can be found in the synchronization template returned by the API.
        /// </summary>
        [JsonPropertyName("id")]
        public string Id { get; set; }
    
        /// <summary>
        /// Gets or sets metadata.
        /// Additional extension properties. Unless instructed explicitly by the support team, metadata values should not be changed.
        /// </summary>
        [JsonPropertyName("metadata")]
        public IEnumerable<StringKeyStringValuePair> Metadata { get; set; }
    
        /// <summary>
        /// Gets or sets name.
        /// Human-readable name of the synchronization rule. Not nullable.
        /// </summary>
        [JsonPropertyName("name")]
        public string Name { get; set; }
    
        /// <summary>
        /// Gets or sets objectMappings.
        /// Collection of object mappings supported by the rule. Tells the synchronization engine which objects should be synchronized.
        /// </summary>
        [JsonPropertyName("objectMappings")]
        public IEnumerable<ObjectMapping> ObjectMappings { get; set; }
    
        /// <summary>
        /// Gets or sets priority.
        /// Priority relative to other rules in the synchronizationSchema. Rules with the lowest priority number will be processed first.
        /// </summary>
        [JsonPropertyName("priority")]
        public Int32? Priority { get; set; }
    
        /// <summary>
        /// Gets or sets sourceDirectoryName.
        /// Name of the source directory. Must match one of the directory definitions in synchronizationSchema.
        /// </summary>
        [JsonPropertyName("sourceDirectoryName")]
        public string SourceDirectoryName { get; set; }
    
        /// <summary>
        /// Gets or sets targetDirectoryName.
        /// Name of the target directory. Must match one of the directory definitions in synchronizationSchema.
        /// </summary>
        [JsonPropertyName("targetDirectoryName")]
        public string TargetDirectoryName { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}

// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Trusted Certificate Authority As Entity Base.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<TrustedCertificateAuthorityAsEntityBase>))]
    public partial class TrustedCertificateAuthorityAsEntityBase : DirectoryObject
    {
    
        ///<summary>
        /// The internal TrustedCertificateAuthorityAsEntityBase constructor
        ///</summary>
        protected internal TrustedCertificateAuthorityAsEntityBase()
        {
            // Don't allow initialization of abstract entity types
        }
    
        /// <summary>
        /// Gets or sets trusted certificate authorities.
        /// </summary>
        [JsonPropertyName("trustedCertificateAuthorities")]
        public ITrustedCertificateAuthorityAsEntityBaseTrustedCertificateAuthoritiesCollectionPage TrustedCertificateAuthorities { get; set; }

        /// <summary>
        /// Gets or sets trustedCertificateAuthoritiesNextLink.
        /// </summary>
        [JsonPropertyName("trustedCertificateAuthorities@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string TrustedCertificateAuthoritiesNextLink { get; set; }
    
    }
}


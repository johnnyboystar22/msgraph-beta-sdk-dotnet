// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type AssignmentFilterEvaluateRequest.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<AssignmentFilterEvaluateRequestObject>))]
    public partial class AssignmentFilterEvaluateRequestObject
    {

        /// <summary>
        /// Gets or sets orderBy.
        /// Order the devices should be sorted in. Default is ascending on device name.
        /// </summary>
        [JsonPropertyName("orderBy")]
        public IEnumerable<string> OrderBy { get; set; }
    
        /// <summary>
        /// Gets or sets platform.
        /// Platform type of the devices on which the Assignment Filter will be applicable. Possible values are: android, androidForWork, iOS, macOS, windowsPhone81, windows81AndLater, windows10AndLater, androidWorkProfile, unknown, androidAOSP, androidMobileApplicationManagement, iOSMobileApplicationManagement, unknownFutureValue.
        /// </summary>
        [JsonPropertyName("platform")]
        public DevicePlatformType? Platform { get; set; }
    
        /// <summary>
        /// Gets or sets rule.
        /// Rule definition of the Assignment Filter.
        /// </summary>
        [JsonPropertyName("rule")]
        public string Rule { get; set; }
    
        /// <summary>
        /// Gets or sets search.
        /// Search keyword applied to scope found devices.
        /// </summary>
        [JsonPropertyName("search")]
        public string Search { get; set; }
    
        /// <summary>
        /// Gets or sets skip.
        /// Number of records to skip. Default value is 0
        /// </summary>
        [JsonPropertyName("skip")]
        public Int32? Skip { get; set; }
    
        /// <summary>
        /// Gets or sets top.
        /// Limit of records per request. Default value is 100, if provided less than 0 or greater than 100
        /// </summary>
        [JsonPropertyName("top")]
        public Int32? Top { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}

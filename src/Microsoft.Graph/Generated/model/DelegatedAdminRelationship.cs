// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Delegated Admin Relationship.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<DelegatedAdminRelationship>))]
    public partial class DelegatedAdminRelationship : Entity
    {
    
        /// <summary>
        /// Gets or sets access details.
        /// The access details that contain the identifiers of the administrative roles that the partner admin is requesting in the customer tenant.
        /// </summary>
        [JsonPropertyName("accessDetails")]
        public DelegatedAdminAccessDetails AccessDetails { get; set; }
    
        /// <summary>
        /// Gets or sets activated date time.
        /// The date and time in ISO 8601 format and in UTC time when the relationship became active. Read-only.
        /// </summary>
        [JsonPropertyName("activatedDateTime")]
        public DateTimeOffset? ActivatedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets created date time.
        /// The date and time in ISO 8601 format and in UTC time when the relationship was created. Read-only.
        /// </summary>
        [JsonPropertyName("createdDateTime")]
        public DateTimeOffset? CreatedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets customer.
        /// The display name and unique identifier of the customer of the relationship. This is configured either by the partner at the time the relationship is created or by the system after the customer approves the relationship. Cannot be changed by the customer.
        /// </summary>
        [JsonPropertyName("customer")]
        public DelegatedAdminRelationshipCustomerParticipant Customer { get; set; }
    
        /// <summary>
        /// Gets or sets display name.
        /// The display name of the relationship used for ease of identification. Must be unique across all delegated admin relationships of the partner. This is set by the partner only when the relationship is in the created status and cannot be changed by the customer.
        /// </summary>
        [JsonPropertyName("displayName")]
        public string DisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets duration.
        /// The duration of the relationship in ISO 8601 format. Must be a value between P1D and P2Y inclusive. This is set by the partner only when the relationship is in the created status and cannot be changed by the customer.
        /// </summary>
        [JsonPropertyName("duration")]
        public Duration Duration { get; set; }
    
        /// <summary>
        /// Gets or sets end date time.
        /// The date and time in ISO 8601 format and in UTC time when the status of relationship changes to either terminated or expired. Calculated as endDateTime = activatedDateTime + duration. Read-only.
        /// </summary>
        [JsonPropertyName("endDateTime")]
        public DateTimeOffset? EndDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets last modified date time.
        /// The date and time in ISO 8601 format and in UTC time when the relationship was last modified. Read-only.
        /// </summary>
        [JsonPropertyName("lastModifiedDateTime")]
        public DateTimeOffset? LastModifiedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets status.
        /// The status of the relationship. Read Only. The possible values are: activating, active, approvalPending, approved, created, expired, expiring, terminated, terminating, terminationRequested, unknownFutureValue. Supports $orderby.
        /// </summary>
        [JsonPropertyName("status")]
        public DelegatedAdminRelationshipStatus? Status { get; set; }
    
        /// <summary>
        /// Gets or sets access assignments.
        /// The access assignments associated with the delegated admin relationship.
        /// </summary>
        [JsonPropertyName("accessAssignments")]
        public IDelegatedAdminRelationshipAccessAssignmentsCollectionPage AccessAssignments { get; set; }

        /// <summary>
        /// Gets or sets accessAssignmentsNextLink.
        /// </summary>
        [JsonPropertyName("accessAssignments@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string AccessAssignmentsNextLink { get; set; }
    
        /// <summary>
        /// Gets or sets operations.
        /// The long running operations associated with the delegated admin relationship.
        /// </summary>
        [JsonPropertyName("operations")]
        public IDelegatedAdminRelationshipOperationsCollectionPage Operations { get; set; }

        /// <summary>
        /// Gets or sets operationsNextLink.
        /// </summary>
        [JsonPropertyName("operations@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string OperationsNextLink { get; set; }
    
        /// <summary>
        /// Gets or sets requests.
        /// The requests associated with the delegated admin relationship.
        /// </summary>
        [JsonPropertyName("requests")]
        public IDelegatedAdminRelationshipRequestsCollectionPage Requests { get; set; }

        /// <summary>
        /// Gets or sets requestsNextLink.
        /// </summary>
        [JsonPropertyName("requests@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string RequestsNextLink { get; set; }
    
    }
}


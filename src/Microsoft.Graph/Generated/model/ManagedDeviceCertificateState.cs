// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Managed Device Certificate State.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<ManagedDeviceCertificateState>))]
    public partial class ManagedDeviceCertificateState : Entity
    {
    
        /// <summary>
        /// Gets or sets certificate enhanced key usage.
        /// Extended key usage
        /// </summary>
        [JsonPropertyName("certificateEnhancedKeyUsage")]
        public string CertificateEnhancedKeyUsage { get; set; }
    
        /// <summary>
        /// Gets or sets certificate error code.
        /// Error code
        /// </summary>
        [JsonPropertyName("certificateErrorCode")]
        public Int32? CertificateErrorCode { get; set; }
    
        /// <summary>
        /// Gets or sets certificate expiration date time.
        /// Certificate expiry date
        /// </summary>
        [JsonPropertyName("certificateExpirationDateTime")]
        public DateTimeOffset? CertificateExpirationDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets certificate issuance date time.
        /// Issuance date
        /// </summary>
        [JsonPropertyName("certificateIssuanceDateTime")]
        public DateTimeOffset? CertificateIssuanceDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets certificate issuance state.
        /// Issuance State. Possible values are: unknown, challengeIssued, challengeIssueFailed, requestCreationFailed, requestSubmitFailed, challengeValidationSucceeded, challengeValidationFailed, issueFailed, issuePending, issued, responseProcessingFailed, responsePending, enrollmentSucceeded, enrollmentNotNeeded, revoked, removedFromCollection, renewVerified, installFailed, installed, deleteFailed, deleted, renewalRequested, requested.
        /// </summary>
        [JsonPropertyName("certificateIssuanceState")]
        public CertificateIssuanceStates? CertificateIssuanceState { get; set; }
    
        /// <summary>
        /// Gets or sets certificate issuer.
        /// Issuer
        /// </summary>
        [JsonPropertyName("certificateIssuer")]
        public string CertificateIssuer { get; set; }
    
        /// <summary>
        /// Gets or sets certificate key length.
        /// Key length
        /// </summary>
        [JsonPropertyName("certificateKeyLength")]
        public Int32? CertificateKeyLength { get; set; }
    
        /// <summary>
        /// Gets or sets certificate key storage provider.
        /// Key Storage Provider. Possible values are: useTpmKspOtherwiseUseSoftwareKsp, useTpmKspOtherwiseFail, usePassportForWorkKspOtherwiseFail, useSoftwareKsp.
        /// </summary>
        [JsonPropertyName("certificateKeyStorageProvider")]
        public KeyStorageProviderOption? CertificateKeyStorageProvider { get; set; }
    
        /// <summary>
        /// Gets or sets certificate key usage.
        /// Key usage. Possible values are: keyEncipherment, digitalSignature.
        /// </summary>
        [JsonPropertyName("certificateKeyUsage")]
        public KeyUsages? CertificateKeyUsage { get; set; }
    
        /// <summary>
        /// Gets or sets certificate last issuance state changed date time.
        /// Last certificate issuance state change
        /// </summary>
        [JsonPropertyName("certificateLastIssuanceStateChangedDateTime")]
        public DateTimeOffset? CertificateLastIssuanceStateChangedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets certificate profile display name.
        /// Certificate profile display name
        /// </summary>
        [JsonPropertyName("certificateProfileDisplayName")]
        public string CertificateProfileDisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets certificate revoke status.
        /// Revoke status. Possible values are: none, pending, issued, failed, revoked.
        /// </summary>
        [JsonPropertyName("certificateRevokeStatus")]
        public CertificateRevocationStatus? CertificateRevokeStatus { get; set; }
    
        /// <summary>
        /// Gets or sets certificate serial number.
        /// Serial number
        /// </summary>
        [JsonPropertyName("certificateSerialNumber")]
        public string CertificateSerialNumber { get; set; }
    
        /// <summary>
        /// Gets or sets certificate subject alternative name format.
        /// Subject alternative name format. Possible values are: none, emailAddress, userPrincipalName, customAzureADAttribute, domainNameService, universalResourceIdentifier.
        /// </summary>
        [JsonPropertyName("certificateSubjectAlternativeNameFormat")]
        public SubjectAlternativeNameType? CertificateSubjectAlternativeNameFormat { get; set; }
    
        /// <summary>
        /// Gets or sets certificate subject alternative name format string.
        /// Subject alternative name format string for custom formats
        /// </summary>
        [JsonPropertyName("certificateSubjectAlternativeNameFormatString")]
        public string CertificateSubjectAlternativeNameFormatString { get; set; }
    
        /// <summary>
        /// Gets or sets certificate subject name format.
        /// Subject name format. Possible values are: commonName, commonNameIncludingEmail, commonNameAsEmail, custom, commonNameAsIMEI, commonNameAsSerialNumber, commonNameAsAadDeviceId, commonNameAsIntuneDeviceId, commonNameAsDurableDeviceId.
        /// </summary>
        [JsonPropertyName("certificateSubjectNameFormat")]
        public SubjectNameFormat? CertificateSubjectNameFormat { get; set; }
    
        /// <summary>
        /// Gets or sets certificate subject name format string.
        /// Subject name format string for custom subject name formats
        /// </summary>
        [JsonPropertyName("certificateSubjectNameFormatString")]
        public string CertificateSubjectNameFormatString { get; set; }
    
        /// <summary>
        /// Gets or sets certificate thumbprint.
        /// Thumbprint
        /// </summary>
        [JsonPropertyName("certificateThumbprint")]
        public string CertificateThumbprint { get; set; }
    
        /// <summary>
        /// Gets or sets certificate validity period.
        /// Validity period
        /// </summary>
        [JsonPropertyName("certificateValidityPeriod")]
        public Int32? CertificateValidityPeriod { get; set; }
    
        /// <summary>
        /// Gets or sets certificate validity period units.
        /// Validity period units. Possible values are: days, months, years.
        /// </summary>
        [JsonPropertyName("certificateValidityPeriodUnits")]
        public CertificateValidityPeriodScale? CertificateValidityPeriodUnits { get; set; }
    
        /// <summary>
        /// Gets or sets device display name.
        /// Device display name
        /// </summary>
        [JsonPropertyName("deviceDisplayName")]
        public string DeviceDisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets device platform.
        /// Device platform. Possible values are: android, androidForWork, iOS, macOS, windowsPhone81, windows81AndLater, windows10AndLater, androidWorkProfile, unknown, androidAOSP, androidMobileApplicationManagement, iOSMobileApplicationManagement, unknownFutureValue.
        /// </summary>
        [JsonPropertyName("devicePlatform")]
        public DevicePlatformType? DevicePlatform { get; set; }
    
        /// <summary>
        /// Gets or sets last certificate state change date time.
        /// Last certificate issuance state change
        /// </summary>
        [JsonPropertyName("lastCertificateStateChangeDateTime")]
        public DateTimeOffset? LastCertificateStateChangeDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets user display name.
        /// User display name
        /// </summary>
        [JsonPropertyName("userDisplayName")]
        public string UserDisplayName { get; set; }
    
    }
}


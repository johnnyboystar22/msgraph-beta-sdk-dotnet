// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type SynchronizationQuarantine.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<SynchronizationQuarantine>))]
    public partial class SynchronizationQuarantine
    {

        /// <summary>
        /// Gets or sets currentBegan.
        /// Date and time when the quarantine was last evaluated and imposed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
        /// </summary>
        [JsonPropertyName("currentBegan")]
        public DateTimeOffset? CurrentBegan { get; set; }
    
        /// <summary>
        /// Gets or sets error.
        /// Describes the error(s) that occurred when putting the synchronization job into quarantine.
        /// </summary>
        [JsonPropertyName("error")]
        public SynchronizationError Error { get; set; }
    
        /// <summary>
        /// Gets or sets nextAttempt.
        /// Date and time when the next attempt to re-evaluate the quarantine will be made. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
        /// </summary>
        [JsonPropertyName("nextAttempt")]
        public DateTimeOffset? NextAttempt { get; set; }
    
        /// <summary>
        /// Gets or sets reason.
        /// A code that signifies why the quarantine was imposed. The possible values are: EncounteredBaseEscrowThreshold, EncounteredTotalEscrowThreshold, EncounteredEscrowProportionThreshold, EncounteredQuarantineException, Unknown, QuarantinedOnDemand, TooManyDeletes, IngestionInterrupted.
        /// </summary>
        [JsonPropertyName("reason")]
        public QuarantineReason? Reason { get; set; }
    
        /// <summary>
        /// Gets or sets seriesBegan.
        /// Date and time when the quarantine was first imposed in this series (a series starts when a quarantine is first imposed, and is reset as soon as the quarantine is lifted). The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
        /// </summary>
        [JsonPropertyName("seriesBegan")]
        public DateTimeOffset? SeriesBegan { get; set; }
    
        /// <summary>
        /// Gets or sets seriesCount.
        /// Number of times in this series the quarantine was re-evaluated and left in effect (a series starts when quarantine is first imposed, and is reset as soon as quarantine is lifted).
        /// </summary>
        [JsonPropertyName("seriesCount")]
        public Int64? SeriesCount { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}

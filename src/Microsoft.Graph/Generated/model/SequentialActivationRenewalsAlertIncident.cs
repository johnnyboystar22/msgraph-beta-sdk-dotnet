// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Sequential Activation Renewals Alert Incident.
    /// </summary>
    public partial class SequentialActivationRenewalsAlertIncident : UnifiedRoleManagementAlertIncident
    {
    
        ///<summary>
        /// The SequentialActivationRenewalsAlertIncident constructor
        ///</summary>
        public SequentialActivationRenewalsAlertIncident()
        {
            this.ODataType = "microsoft.graph.sequentialActivationRenewalsAlertIncident";
        }

        /// <summary>
        /// Gets or sets activation count.
        /// The length of sequential activation of the same role.
        /// </summary>
        [JsonPropertyName("activationCount")]
        public Int32? ActivationCount { get; set; }
    
        /// <summary>
        /// Gets or sets assignee display name.
        /// Display name of the subject that the incident applies to.
        /// </summary>
        [JsonPropertyName("assigneeDisplayName")]
        public string AssigneeDisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets assignee id.
        /// The identifier of the subject that the incident applies to.
        /// </summary>
        [JsonPropertyName("assigneeId")]
        public string AssigneeId { get; set; }
    
        /// <summary>
        /// Gets or sets assignee user principal name.
        /// User principal name of the subject that the incident applies to. Applies to user principals.
        /// </summary>
        [JsonPropertyName("assigneeUserPrincipalName")]
        public string AssigneeUserPrincipalName { get; set; }
    
        /// <summary>
        /// Gets or sets role definition id.
        /// The identifier for the directory role definition that's in scope of this incident.
        /// </summary>
        [JsonPropertyName("roleDefinitionId")]
        public string RoleDefinitionId { get; set; }
    
        /// <summary>
        /// Gets or sets role display name.
        /// The display name for the directory role.
        /// </summary>
        [JsonPropertyName("roleDisplayName")]
        public string RoleDisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets role template id.
        /// The globally unique identifier for the directory role.
        /// </summary>
        [JsonPropertyName("roleTemplateId")]
        public string RoleTemplateId { get; set; }
    
        /// <summary>
        /// Gets or sets sequence end date time.
        /// End date time of the sequential activation event.
        /// </summary>
        [JsonPropertyName("sequenceEndDateTime")]
        public DateTimeOffset? SequenceEndDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets sequence start date time.
        /// Start date time of the sequential activation event.
        /// </summary>
        [JsonPropertyName("sequenceStartDateTime")]
        public DateTimeOffset? SequenceStartDateTime { get; set; }
    
    }
}


// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Dep Mac OSEnrollment Profile.
    /// </summary>
    public partial class DepMacOSEnrollmentProfile : DepEnrollmentBaseProfile
    {
    
        ///<summary>
        /// The DepMacOSEnrollmentProfile constructor
        ///</summary>
        public DepMacOSEnrollmentProfile()
        {
            this.ODataType = "microsoft.graph.depMacOSEnrollmentProfile";
        }

        /// <summary>
        /// Gets or sets accessibility screen disabled.
        /// Indicates if Accessibility screen is disabled
        /// </summary>
        [JsonPropertyName("accessibilityScreenDisabled")]
        public bool? AccessibilityScreenDisabled { get; set; }
    
        /// <summary>
        /// Gets or sets admin account full name.
        /// Indicates what the full name for the admin account is
        /// </summary>
        [JsonPropertyName("adminAccountFullName")]
        public string AdminAccountFullName { get; set; }
    
        /// <summary>
        /// Gets or sets admin account password.
        /// Indicates what the password for the admin account is
        /// </summary>
        [JsonPropertyName("adminAccountPassword")]
        public string AdminAccountPassword { get; set; }
    
        /// <summary>
        /// Gets or sets admin account user name.
        /// Indicates what the user name for the admin account is
        /// </summary>
        [JsonPropertyName("adminAccountUserName")]
        public string AdminAccountUserName { get; set; }
    
        /// <summary>
        /// Gets or sets auto unlock with watch disabled.
        /// Indicates if UnlockWithWatch screen is disabled
        /// </summary>
        [JsonPropertyName("autoUnlockWithWatchDisabled")]
        public bool? AutoUnlockWithWatchDisabled { get; set; }
    
        /// <summary>
        /// Gets or sets choose your lock screen disabled.
        /// Indicates if iCloud Documents and Desktop screen is disabled
        /// </summary>
        [JsonPropertyName("chooseYourLockScreenDisabled")]
        public bool? ChooseYourLockScreenDisabled { get; set; }
    
        /// <summary>
        /// Gets or sets dont auto populate primary account info.
        /// Indicates whether Setup Assistant will auto populate the primary account information
        /// </summary>
        [JsonPropertyName("dontAutoPopulatePrimaryAccountInfo")]
        public bool? DontAutoPopulatePrimaryAccountInfo { get; set; }
    
        /// <summary>
        /// Gets or sets enable restrict editing.
        /// Indicates whether the user will enable blockediting
        /// </summary>
        [JsonPropertyName("enableRestrictEditing")]
        public bool? EnableRestrictEditing { get; set; }
    
        /// <summary>
        /// Gets or sets file vault disabled.
        /// Indicates if file vault is disabled
        /// </summary>
        [JsonPropertyName("fileVaultDisabled")]
        public bool? FileVaultDisabled { get; set; }
    
        /// <summary>
        /// Gets or sets hide admin account.
        /// Indicates whether the admin account should be hidded or not
        /// </summary>
        [JsonPropertyName("hideAdminAccount")]
        public bool? HideAdminAccount { get; set; }
    
        /// <summary>
        /// Gets or sets i cloud diagnostics disabled.
        /// Indicates if iCloud Analytics screen is disabled
        /// </summary>
        [JsonPropertyName("iCloudDiagnosticsDisabled")]
        public bool? ICloudDiagnosticsDisabled { get; set; }
    
        /// <summary>
        /// Gets or sets i cloud storage disabled.
        /// Indicates if iCloud Documents and Desktop screen is disabled
        /// </summary>
        [JsonPropertyName("iCloudStorageDisabled")]
        public bool? ICloudStorageDisabled { get; set; }
    
        /// <summary>
        /// Gets or sets pass code disabled.
        /// Indicates if Passcode setup pane is disabled
        /// </summary>
        [JsonPropertyName("passCodeDisabled")]
        public bool? PassCodeDisabled { get; set; }
    
        /// <summary>
        /// Gets or sets primary account full name.
        /// Indicates what the full name for the primary account is
        /// </summary>
        [JsonPropertyName("primaryAccountFullName")]
        public string PrimaryAccountFullName { get; set; }
    
        /// <summary>
        /// Gets or sets primary account user name.
        /// Indicates what the account name for the primary account is
        /// </summary>
        [JsonPropertyName("primaryAccountUserName")]
        public string PrimaryAccountUserName { get; set; }
    
        /// <summary>
        /// Gets or sets registration disabled.
        /// Indicates if registration is disabled
        /// </summary>
        [JsonPropertyName("registrationDisabled")]
        public bool? RegistrationDisabled { get; set; }
    
        /// <summary>
        /// Gets or sets set primary setup account as regular user.
        /// Indicates whether Setup Assistant will set the account as a regular user
        /// </summary>
        [JsonPropertyName("setPrimarySetupAccountAsRegularUser")]
        public bool? SetPrimarySetupAccountAsRegularUser { get; set; }
    
        /// <summary>
        /// Gets or sets skip primary setup account creation.
        /// Indicates whether Setup Assistant will skip the user interface for primary account setup
        /// </summary>
        [JsonPropertyName("skipPrimarySetupAccountCreation")]
        public bool? SkipPrimarySetupAccountCreation { get; set; }
    
        /// <summary>
        /// Gets or sets zoom disabled.
        /// Indicates if zoom setup pane is disabled
        /// </summary>
        [JsonPropertyName("zoomDisabled")]
        public bool? ZoomDisabled { get; set; }
    
    }
}


// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Recommendation Base.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<RecommendationBase>))]
    public partial class RecommendationBase : Entity
    {
    
        /// <summary>
        /// Gets or sets action steps.
        /// List of actions to take to complete a recommendation.
        /// </summary>
        [JsonPropertyName("actionSteps")]
        public IEnumerable<ActionStep> ActionSteps { get; set; }
    
        /// <summary>
        /// Gets or sets benefits.
        /// An explanation of why completing the recommendation will benefit you. Corresponds to the Value section of a recommendation shown in the Azure AD portal.
        /// </summary>
        [JsonPropertyName("benefits")]
        public string Benefits { get; set; }
    
        /// <summary>
        /// Gets or sets category.
        /// Indicates the category of intelligent guidance that the recommendation falls under. The possible values are: identityBestPractice, identitySecureScore, unknownFutureValue.
        /// </summary>
        [JsonPropertyName("category")]
        public RecommendationCategory? Category { get; set; }
    
        /// <summary>
        /// Gets or sets created date time.
        /// The date and time when the recommendation was detected as applicable to your directory.
        /// </summary>
        [JsonPropertyName("createdDateTime")]
        public DateTimeOffset? CreatedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets current score.
        /// The number of points the tenant has attained. Only applies to recommendations with category set to identitySecureScore.
        /// </summary>
        [JsonPropertyName("currentScore")]
        public double? CurrentScore { get; set; }
    
        /// <summary>
        /// Gets or sets display name.
        /// The title of the recommendation.
        /// </summary>
        [JsonPropertyName("displayName")]
        public string DisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets feature areas.
        /// The directory feature that the recommendation is related to.
        /// </summary>
        [JsonPropertyName("featureAreas")]
        public IEnumerable<RecommendationFeatureAreas> FeatureAreas { get; set; }
    
        /// <summary>
        /// Gets or sets impact start date time.
        /// The future date and time when a recommendation should be completed.
        /// </summary>
        [JsonPropertyName("impactStartDateTime")]
        public DateTimeOffset? ImpactStartDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets impact type.
        /// Indicates the scope of impact of a recommendation. Tenant level indicates that the recommendation impacts the whole tenant. Other possible values include users, applications.
        /// </summary>
        [JsonPropertyName("impactType")]
        public string ImpactType { get; set; }
    
        /// <summary>
        /// Gets or sets insights.
        /// Describes why a recommendation uniquely applies to your directory. Corresponds to the Description section of a recommendation shown in the Azure AD portal.
        /// </summary>
        [JsonPropertyName("insights")]
        public string Insights { get; set; }
    
        /// <summary>
        /// Gets or sets last checked date time.
        /// The most recent date and time a recommendation was deemed applicable to your directory.
        /// </summary>
        [JsonPropertyName("lastCheckedDateTime")]
        public DateTimeOffset? LastCheckedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets last modified by.
        /// Name of the user who last updated the status of the recommendation.
        /// </summary>
        [JsonPropertyName("lastModifiedBy")]
        public string LastModifiedBy { get; set; }
    
        /// <summary>
        /// Gets or sets last modified date time.
        /// The date and time the status of a recommendation was last updated.
        /// </summary>
        [JsonPropertyName("lastModifiedDateTime")]
        public DateTimeOffset? LastModifiedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets max score.
        /// The maximum number of points attainable. Only applies to recommendations with category set to identitySecureScore.
        /// </summary>
        [JsonPropertyName("maxScore")]
        public double? MaxScore { get; set; }
    
        /// <summary>
        /// Gets or sets postpone until date time.
        /// The future date and time when the status of a postponed recommendation will be active again.
        /// </summary>
        [JsonPropertyName("postponeUntilDateTime")]
        public DateTimeOffset? PostponeUntilDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets priority.
        /// Indicates the time sensitivity for a recommendation to be completed. Microsoft auto assigns this value. The possible values are: low, medium, high.
        /// </summary>
        [JsonPropertyName("priority")]
        public RecommendationPriority? Priority { get; set; }
    
        /// <summary>
        /// Gets or sets recommendation type.
        /// Friendly shortname to identify the recommendation. The possible values are: adfsAppsMigration, enableDesktopSSO, enablePHS, enableProvisioning, switchFromPerUserMFA, tenantMFA, thirdPartyApps, turnOffPerUserMFA, useAuthenticatorApp, useMyApps, staleApps, staleAppCreds, applicationCredentialExpiry, servicePrincipalKeyExpiry, adminMFAV2, blockLegacyAuthentication, integratedApps, mfaRegistrationV2, pwagePolicyNew, passwordHashSync, oneAdmin, roleOverlap, selfServicePasswordReset, signinRiskPolicy, userRiskPolicy, verifyAppPublisher, privateLinkForAAD, appRoleAssignmentsGroups, appRoleAssignmentsUsers, managedIdentity, overprivilegedApps, unknownFutureValue.
        /// </summary>
        [JsonPropertyName("recommendationType")]
        public RecommendationType? RecommendationType { get; set; }
    
        /// <summary>
        /// Gets or sets release type.
        /// The current release type of the recommendation. The possible values are: preview or generallyAvailable.
        /// </summary>
        [JsonPropertyName("releaseType")]
        public string ReleaseType { get; set; }
    
        /// <summary>
        /// Gets or sets remediation impact.
        /// Description of the impact on users of the remediation. Only applies to recommendations with category set to identitySecureScore.
        /// </summary>
        [JsonPropertyName("remediationImpact")]
        public string RemediationImpact { get; set; }
    
        /// <summary>
        /// Gets or sets status.
        /// Indicates the status of the recommendation based on user or system action. The possible values are: active, completedBySystem, completedByUser, dismissed, postponed, unknownFutureValue. By default, a recommendation's status is set to active when the recommendation is first generated. Status is set to completedBySystem when our service detects that a recommendation which was previously active no longer applies.
        /// </summary>
        [JsonPropertyName("status")]
        public RecommendationStatus? Status { get; set; }
    
        /// <summary>
        /// Gets or sets impacted resources.
        /// The list of directory objects associated with the recommendation.
        /// </summary>
        [JsonPropertyName("impactedResources")]
        public IRecommendationBaseImpactedResourcesCollectionPage ImpactedResources { get; set; }

        /// <summary>
        /// Gets or sets impactedResourcesNextLink.
        /// </summary>
        [JsonPropertyName("impactedResources@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string ImpactedResourcesNextLink { get; set; }
    
    }
}


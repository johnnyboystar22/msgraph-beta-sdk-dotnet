// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type CloudPcLaunchInfo.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<CloudPcLaunchInfo>))]
    public partial class CloudPcLaunchInfo
    {

        /// <summary>
        /// Gets or sets cloudPcId.
        /// The unique identifier of the Cloud PC.
        /// </summary>
        [JsonPropertyName("cloudPcId")]
        public string CloudPcId { get; set; }
    
        /// <summary>
        /// Gets or sets cloudPcLaunchUrl.
        /// The connect URL of the Cloud PC.
        /// </summary>
        [JsonPropertyName("cloudPcLaunchUrl")]
        public string CloudPcLaunchUrl { get; set; }
    
        /// <summary>
        /// Gets or sets windows365SwitchCompatible.
        /// Indicates whether the Cloud PC supports switch functionality. If the value is true, it supports switch functionality; otherwise,  false.
        /// </summary>
        [JsonPropertyName("windows365SwitchCompatible")]
        public bool? Windows365SwitchCompatible { get; set; }
    
        /// <summary>
        /// Gets or sets windows365SwitchNotCompatibleReason.
        /// Indicates the reason the Cloud PC doesn't support switch. CPCOsVersionNotMeetRequirement indicates that the user needs to update their Cloud PC operation system version. CPCHardwareNotMeetRequirement indicates that the Cloud PC needs more CPU or RAM to support the functionality.
        /// </summary>
        [JsonPropertyName("windows365SwitchNotCompatibleReason")]
        public string Windows365SwitchNotCompatibleReason { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}

// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Multi Tenant Organization Identity Sync Policy Template.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<MultiTenantOrganizationIdentitySyncPolicyTemplate>))]
    public partial class MultiTenantOrganizationIdentitySyncPolicyTemplate : Entity
    {
    
        /// <summary>
        /// Gets or sets template application level.
        /// Specifies whether the template will be applied to user synchronization settings of certain tenants. The possible values are: none, newPartners, existingPartners, unknownFutureValue. You can also specify multiple values like newPartners,existingPartners (default). none indicates the template is not applied to any new or existing partner tenants. newPartners indicates the template is applied to new partner tenants. existingPartners indicates the template is applied to existing partner tenants, those who already had partner-specific user synchronization settings in place.
        /// </summary>
        [JsonPropertyName("templateApplicationLevel")]
        public TemplateApplicationLevel? TemplateApplicationLevel { get; set; }
    
        /// <summary>
        /// Gets or sets user sync inbound.
        /// Defines whether users can be synchronized from the partner tenant.
        /// </summary>
        [JsonPropertyName("userSyncInbound")]
        public CrossTenantUserSyncInbound UserSyncInbound { get; set; }
    
    }
}


// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type AssignmentReviewSettings.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<AssignmentReviewSettings>))]
    public partial class AssignmentReviewSettings
    {

        /// <summary>
        /// Gets or sets accessReviewTimeoutBehavior.
        /// The default decision to apply if the request is not reviewed within the period specified in durationInDays. The possible values are: acceptAccessRecommendation, keepAccess, removeAccess, and unknownFutureValue.
        /// </summary>
        [JsonPropertyName("accessReviewTimeoutBehavior")]
        public AccessReviewTimeoutBehavior? AccessReviewTimeoutBehavior { get; set; }
    
        /// <summary>
        /// Gets or sets durationInDays.
        /// The number of days within which reviewers should provide input.
        /// </summary>
        [JsonPropertyName("durationInDays")]
        public Int32? DurationInDays { get; set; }
    
        /// <summary>
        /// Gets or sets isAccessRecommendationEnabled.
        /// Specifies whether to display recommendations to the reviewer. The default value is true
        /// </summary>
        [JsonPropertyName("isAccessRecommendationEnabled")]
        public bool? IsAccessRecommendationEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets isApprovalJustificationRequired.
        /// Specifies whether the reviewer must provide justification for the approval. The default value is true.
        /// </summary>
        [JsonPropertyName("isApprovalJustificationRequired")]
        public bool? IsApprovalJustificationRequired { get; set; }
    
        /// <summary>
        /// Gets or sets isEnabled.
        /// If true, access reviews are required for assignments from this policy.
        /// </summary>
        [JsonPropertyName("isEnabled")]
        public bool? IsEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets recurrenceType.
        /// The interval for recurrence, such as monthly or quarterly.
        /// </summary>
        [JsonPropertyName("recurrenceType")]
        public string RecurrenceType { get; set; }
    
        /// <summary>
        /// Gets or sets reviewers.
        /// If the reviewerType is Reviewers, this collection specifies the users who will be reviewers, either by ID or as members of a group, using a collection of singleUser and groupMembers.
        /// </summary>
        [JsonPropertyName("reviewers")]
        public IEnumerable<UserSet> Reviewers { get; set; }
    
        /// <summary>
        /// Gets or sets reviewerType.
        /// Who should be asked to do the review, either Self, Reviewers or Manager.
        /// </summary>
        [JsonPropertyName("reviewerType")]
        public string ReviewerType { get; set; }
    
        /// <summary>
        /// Gets or sets startDateTime.
        /// When the first review should start.
        /// </summary>
        [JsonPropertyName("startDateTime")]
        public DateTimeOffset? StartDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}

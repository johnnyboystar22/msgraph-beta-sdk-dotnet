// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Virtual Event.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<VirtualEvent>))]
    public partial class VirtualEvent : Entity
    {
    
        /// <summary>
        /// Gets or sets created by.
        /// Identity information of who created the virtual event. Inherited from virtualEvent.
        /// </summary>
        [JsonPropertyName("createdBy")]
        public CommunicationsIdentitySet CreatedBy { get; set; }
    
        /// <summary>
        /// Gets or sets description.
        /// Description of the virtual event.
        /// </summary>
        [JsonPropertyName("description")]
        public string Description { get; set; }
    
        /// <summary>
        /// Gets or sets display name.
        /// Display name of the virtual event
        /// </summary>
        [JsonPropertyName("displayName")]
        public string DisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets end date time.
        /// End time of the virtual event.
        /// </summary>
        [JsonPropertyName("endDateTime")]
        public DateTimeTimeZone EndDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets start date time.
        /// Start time of the virtual event.
        /// </summary>
        [JsonPropertyName("startDateTime")]
        public DateTimeTimeZone StartDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets status.
        /// Status of the virtual event. The possible values are: draft, published, canceled, unknownFutureValue.
        /// </summary>
        [JsonPropertyName("status")]
        public VirtualEventStatus? Status { get; set; }
    
        /// <summary>
        /// Gets or sets presenters.
        /// Presenters' information of the virtual event.
        /// </summary>
        [JsonPropertyName("presenters")]
        public IVirtualEventPresentersCollectionPage Presenters { get; set; }

        /// <summary>
        /// Gets or sets presentersNextLink.
        /// </summary>
        [JsonPropertyName("presenters@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string PresentersNextLink { get; set; }
    
        /// <summary>
        /// Gets or sets sessions.
        /// Sessions of the virtual event.
        /// </summary>
        [JsonPropertyName("sessions")]
        public IVirtualEventSessionsCollectionPage Sessions { get; set; }

        /// <summary>
        /// Gets or sets sessionsNextLink.
        /// </summary>
        [JsonPropertyName("sessions@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string SessionsNextLink { get; set; }
    
    }
}


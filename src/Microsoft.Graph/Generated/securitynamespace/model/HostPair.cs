// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph.SecurityNamespace
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Host Pair.
    /// </summary>
    public partial class HostPair : Microsoft.Graph.Entity
    {
    
        /// <summary>
        /// Gets or sets first seen date time.
        /// The first date and time when Microsoft Defender Threat Intelligence observed the hostPair. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z.
        /// </summary>
        [JsonPropertyName("firstSeenDateTime")]
        public DateTimeOffset? FirstSeenDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets last seen date time.
        /// The last date and time when Microsoft Defender Threat Intelligence observed the hostPair. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z.
        /// </summary>
        [JsonPropertyName("lastSeenDateTime")]
        public DateTimeOffset? LastSeenDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets link kind.
        /// The reason the two hosts are identified as hostPairs.
        /// </summary>
        [JsonPropertyName("linkKind")]
        public string LinkKind { get; set; }
    
        /// <summary>
        /// Gets or sets child host.
        /// Host reached via the parentHost.
        /// </summary>
        [JsonPropertyName("childHost")]
        public Host ChildHost { get; set; }
    
        /// <summary>
        /// Gets or sets parent host.
        /// Host used to reach the childHost.
        /// </summary>
        [JsonPropertyName("parentHost")]
        public Host ParentHost { get; set; }
    
    }
}


// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph.SecurityNamespace
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Host Component.
    /// </summary>
    public partial class HostComponent : Artifact
    {
    
        ///<summary>
        /// The HostComponent constructor
        ///</summary>
        public HostComponent()
        {
            this.ODataType = "microsoft.graph.security.hostComponent";
        }

        /// <summary>
        /// Gets or sets category.
        /// The type of component that was detected (for example, Operating System, Framework, Remote Access, or Server).
        /// </summary>
        [JsonPropertyName("category")]
        public string Category { get; set; }
    
        /// <summary>
        /// Gets or sets first seen date time.
        /// The first date and time when this web component was observed by Microsoft Defender Threat Intelligence. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
        /// </summary>
        [JsonPropertyName("firstSeenDateTime")]
        public DateTimeOffset? FirstSeenDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets last seen date time.
        /// The most recent date and time when this web component was observed by Microsoft Defender Threat Intelligence. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
        /// </summary>
        [JsonPropertyName("lastSeenDateTime")]
        public DateTimeOffset? LastSeenDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets name.
        /// A name running on the artifact, for example, Microsoft IIS.
        /// </summary>
        [JsonPropertyName("name")]
        public string Name { get; set; }
    
        /// <summary>
        /// Gets or sets version.
        /// The component version running on the artifact, for example, v8.5. This should not be assumed to be strictly numerical.
        /// </summary>
        [JsonPropertyName("version")]
        public string Version { get; set; }
    
        /// <summary>
        /// Gets or sets host.
        /// The host related to this component. This is a reverse navigation property. When navigating to components from a host, this should be assumed to be a return reference.
        /// </summary>
        [JsonPropertyName("host")]
        public Host Host { get; set; }
    
    }
}


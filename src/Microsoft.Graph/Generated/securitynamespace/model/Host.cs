// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph.SecurityNamespace
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Host.
    /// </summary>
    [JsonConverter(typeof(Microsoft.Graph.DerivedTypeConverter<Host>))]
    public partial class Host : Artifact
    {
    
        ///<summary>
        /// The internal Host constructor
        ///</summary>
        protected internal Host()
        {
            // Don't allow initialization of abstract entity types
        }
    
        /// <summary>
        /// Gets or sets first seen date time.
        /// The first date and time when this host was observed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
        /// </summary>
        [JsonPropertyName("firstSeenDateTime")]
        public DateTimeOffset? FirstSeenDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets last seen date time.
        /// The most recent date and time when this host was observed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
        /// </summary>
        [JsonPropertyName("lastSeenDateTime")]
        public DateTimeOffset? LastSeenDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets child host pairs.
        /// The hostPairs that are resources associated with a host, where that host is the parentHost and has an outgoing pairing to a cihldHost.
        /// </summary>
        [JsonPropertyName("childHostPairs")]
        public IHostChildHostPairsCollectionWithReferencesPage ChildHostPairs { get; set; }

        /// <summary>
        /// Gets or sets childHostPairsNextLink.
        /// </summary>
        [JsonPropertyName("childHostPairs@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string ChildHostPairsNextLink { get; set; }
    
        /// <summary>
        /// Gets or sets components.
        /// The hostComponents that are associated with this host.
        /// </summary>
        [JsonPropertyName("components")]
        public IHostComponentsCollectionWithReferencesPage Components { get; set; }

        /// <summary>
        /// Gets or sets componentsNextLink.
        /// </summary>
        [JsonPropertyName("components@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string ComponentsNextLink { get; set; }
    
        /// <summary>
        /// Gets or sets cookies.
        /// The hostCookies that are associated with this host.
        /// </summary>
        [JsonPropertyName("cookies")]
        public IHostCookiesCollectionWithReferencesPage Cookies { get; set; }

        /// <summary>
        /// Gets or sets cookiesNextLink.
        /// </summary>
        [JsonPropertyName("cookies@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string CookiesNextLink { get; set; }
    
        /// <summary>
        /// Gets or sets host pairs.
        /// The hostPairs that are associated with this host, where this host is either the parentHost or childHost.
        /// </summary>
        [JsonPropertyName("hostPairs")]
        public IHostHostPairsCollectionWithReferencesPage HostPairs { get; set; }

        /// <summary>
        /// Gets or sets hostPairsNextLink.
        /// </summary>
        [JsonPropertyName("hostPairs@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string HostPairsNextLink { get; set; }
    
        /// <summary>
        /// Gets or sets parent host pairs.
        /// The hostPairs that are associated with a host, where that host is the childHost and has an incoming pairing with a parentHost.
        /// </summary>
        [JsonPropertyName("parentHostPairs")]
        public IHostParentHostPairsCollectionWithReferencesPage ParentHostPairs { get; set; }

        /// <summary>
        /// Gets or sets parentHostPairsNextLink.
        /// </summary>
        [JsonPropertyName("parentHostPairs@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string ParentHostPairsNextLink { get; set; }
    
        /// <summary>
        /// Gets or sets passive dns.
        /// Passive DNS retrieval about this host.
        /// </summary>
        [JsonPropertyName("passiveDns")]
        public IHostPassiveDnsCollectionWithReferencesPage PassiveDns { get; set; }

        /// <summary>
        /// Gets or sets passiveDnsNextLink.
        /// </summary>
        [JsonPropertyName("passiveDns@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string PassiveDnsNextLink { get; set; }
    
        /// <summary>
        /// Gets or sets passive dns reverse.
        /// Reverse passive DNS retrieval about this host.
        /// </summary>
        [JsonPropertyName("passiveDnsReverse")]
        public IHostPassiveDnsReverseCollectionWithReferencesPage PassiveDnsReverse { get; set; }

        /// <summary>
        /// Gets or sets passiveDnsReverseNextLink.
        /// </summary>
        [JsonPropertyName("passiveDnsReverse@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string PassiveDnsReverseNextLink { get; set; }
    
        /// <summary>
        /// Gets or sets reputation.
        /// Represents a calculated reputation of this host.
        /// </summary>
        [JsonPropertyName("reputation")]
        public HostReputation Reputation { get; set; }
    
        /// <summary>
        /// Gets or sets ssl certificates.
        /// The hostSslCertificates that are associated with this host.
        /// </summary>
        [JsonPropertyName("sslCertificates")]
        public IHostSslCertificatesCollectionWithReferencesPage SslCertificates { get; set; }

        /// <summary>
        /// Gets or sets sslCertificatesNextLink.
        /// </summary>
        [JsonPropertyName("sslCertificates@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string SslCertificatesNextLink { get; set; }
    
        /// <summary>
        /// Gets or sets subdomains.
        /// The subdomains that are associated with this host.
        /// </summary>
        [JsonPropertyName("subdomains")]
        public IHostSubdomainsCollectionWithReferencesPage Subdomains { get; set; }

        /// <summary>
        /// Gets or sets subdomainsNextLink.
        /// </summary>
        [JsonPropertyName("subdomains@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string SubdomainsNextLink { get; set; }
    
        /// <summary>
        /// Gets or sets trackers.
        /// The hostTrackers that are associated with this host.
        /// </summary>
        [JsonPropertyName("trackers")]
        public IHostTrackersCollectionWithReferencesPage Trackers { get; set; }

        /// <summary>
        /// Gets or sets trackersNextLink.
        /// </summary>
        [JsonPropertyName("trackers@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string TrackersNextLink { get; set; }
    
        /// <summary>
        /// Gets or sets whois.
        /// The most recent whoisRecord for this host.
        /// </summary>
        [JsonPropertyName("whois")]
        public WhoisRecord Whois { get; set; }
    
    }
}


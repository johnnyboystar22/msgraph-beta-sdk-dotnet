// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph.SecurityNamespace
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Ssl Certificate.
    /// </summary>
    public partial class SslCertificate : Artifact
    {
    
        ///<summary>
        /// The SslCertificate constructor
        ///</summary>
        public SslCertificate()
        {
            this.ODataType = "microsoft.graph.security.sslCertificate";
        }

        /// <summary>
        /// Gets or sets expiration date time.
        /// The date and time when a certificate expires. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
        /// </summary>
        [JsonPropertyName("expirationDateTime")]
        public DateTimeOffset? ExpirationDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets fingerprint.
        /// A hash of the certificate calculated on the data and signature.
        /// </summary>
        [JsonPropertyName("fingerprint")]
        public string Fingerprint { get; set; }
    
        /// <summary>
        /// Gets or sets first seen date time.
        /// The first date and time that this sslCertificate was observed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
        /// </summary>
        [JsonPropertyName("firstSeenDateTime")]
        public DateTimeOffset? FirstSeenDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets issue date time.
        /// The date and time when a certificate was issued. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
        /// </summary>
        [JsonPropertyName("issueDateTime")]
        public DateTimeOffset? IssueDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets issuer.
        /// The entity granting this certificate.
        /// </summary>
        [JsonPropertyName("issuer")]
        public SslCertificateEntity Issuer { get; set; }
    
        /// <summary>
        /// Gets or sets last seen date time.
        /// The most recent date and time that this sslCertificate was observed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
        /// </summary>
        [JsonPropertyName("lastSeenDateTime")]
        public DateTimeOffset? LastSeenDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets serial number.
        /// The serial number associated with an SSL certificate.
        /// </summary>
        [JsonPropertyName("serialNumber")]
        public string SerialNumber { get; set; }
    
        /// <summary>
        /// Gets or sets sha1.
        /// A SHA-1 hash of the certificate. Note: This is not the signature.
        /// </summary>
        [JsonPropertyName("sha1")]
        public string Sha1 { get; set; }
    
        /// <summary>
        /// Gets or sets subject.
        /// The person, site, machine, and so on, this certificate is for.
        /// </summary>
        [JsonPropertyName("subject")]
        public SslCertificateEntity Subject { get; set; }
    
        /// <summary>
        /// Gets or sets related hosts.
        /// The hosts related with this sslCertificate.
        /// </summary>
        [JsonPropertyName("relatedHosts")]
        public ISslCertificateRelatedHostsCollectionWithReferencesPage RelatedHosts { get; set; }

        /// <summary>
        /// Gets or sets relatedHostsNextLink.
        /// </summary>
        [JsonPropertyName("relatedHosts@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string RelatedHostsNextLink { get; set; }
    
    }
}


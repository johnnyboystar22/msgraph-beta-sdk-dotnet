// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph.SecurityNamespace
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Vulnerability.
    /// </summary>
    [JsonConverter(typeof(Microsoft.Graph.DerivedTypeConverter<Vulnerability>))]
    public partial class Vulnerability : Microsoft.Graph.Entity
    {
    
        /// <summary>
        /// Gets or sets active exploits observed.
        /// Indicates whether this vulnerability has any known exploits associated to known bad actors.
        /// </summary>
        [JsonPropertyName("activeExploitsObserved")]
        public bool? ActiveExploitsObserved { get; set; }
    
        /// <summary>
        /// Gets or sets common weakness enumeration ids.
        /// Community-defined common weakness enumerations (CWE).
        /// </summary>
        [JsonPropertyName("commonWeaknessEnumerationIds")]
        public IEnumerable<string> CommonWeaknessEnumerationIds { get; set; }
    
        /// <summary>
        /// Gets or sets created date time.
        /// The date and time when this vulnerability article was first created.
        /// </summary>
        [JsonPropertyName("createdDateTime")]
        public DateTimeOffset? CreatedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets cvss2summary.
        /// A summary of the common vulnerability scoring system (v2) findings about this vulnerability.
        /// </summary>
        [JsonPropertyName("cvss2Summary")]
        public CvssSummary Cvss2Summary { get; set; }
    
        /// <summary>
        /// Gets or sets cvss3summary.
        /// A summary of the common vulnerability scoring system (v3) findings about this vulnerability.
        /// </summary>
        [JsonPropertyName("cvss3Summary")]
        public CvssSummary Cvss3Summary { get; set; }
    
        /// <summary>
        /// Gets or sets description.
        /// The vulnerability article contents, describing the vulnerability.
        /// </summary>
        [JsonPropertyName("description")]
        public FormattedContent Description { get; set; }
    
        /// <summary>
        /// Gets or sets exploits.
        /// Known exploits for this vulnerability.
        /// </summary>
        [JsonPropertyName("exploits")]
        public IEnumerable<Hyperlink> Exploits { get; set; }
    
        /// <summary>
        /// Gets or sets exploits available.
        /// Indicates whether this vulnerability has exploits in public sources (such as Packetstorm or Exploit-DB) online.
        /// </summary>
        [JsonPropertyName("exploitsAvailable")]
        public bool? ExploitsAvailable { get; set; }
    
        /// <summary>
        /// Gets or sets has chatter.
        /// Indicates whether chatter about this vulnerability has been discovered online.
        /// </summary>
        [JsonPropertyName("hasChatter")]
        public bool? HasChatter { get; set; }
    
        /// <summary>
        /// Gets or sets last modified date time.
        /// The date and time when this vulnerability article was most recently updated.
        /// </summary>
        [JsonPropertyName("lastModifiedDateTime")]
        public DateTimeOffset? LastModifiedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets priority score.
        /// A unique algorithm that reflects the priority of a vulnerability based on the CVSS score, exploits, chatter, and linkage to malware. This property also evaluates the recency of these components so users can understand which vulnerability should be remediated first.
        /// </summary>
        [JsonPropertyName("priorityScore")]
        public Int32? PriorityScore { get; set; }
    
        /// <summary>
        /// Gets or sets published date time.
        /// The date and time when this vulnerability article was published.
        /// </summary>
        [JsonPropertyName("publishedDateTime")]
        public DateTimeOffset? PublishedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets references.
        /// Reference links where further information can be learned about this vulnerability.
        /// </summary>
        [JsonPropertyName("references")]
        public IEnumerable<Hyperlink> References { get; set; }
    
        /// <summary>
        /// Gets or sets remediation.
        /// Any known remediation steps.
        /// </summary>
        [JsonPropertyName("remediation")]
        public FormattedContent Remediation { get; set; }
    
        /// <summary>
        /// Gets or sets severity.
        /// Indicates the severity of this vulnerability. The possible values are: none, low, medium, high, critical, unknownFutureValue.
        /// </summary>
        [JsonPropertyName("severity")]
        public VulnerabilitySeverity? Severity { get; set; }
    
        /// <summary>
        /// Gets or sets articles.
        /// Articles related to this vulnerability.
        /// </summary>
        [JsonPropertyName("articles")]
        public IVulnerabilityArticlesCollectionWithReferencesPage Articles { get; set; }

        /// <summary>
        /// Gets or sets articlesNextLink.
        /// </summary>
        [JsonPropertyName("articles@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string ArticlesNextLink { get; set; }
    
        /// <summary>
        /// Gets or sets components.
        /// Components related to this vulnerability article.
        /// </summary>
        [JsonPropertyName("components")]
        public IVulnerabilityComponentsCollectionPage Components { get; set; }

        /// <summary>
        /// Gets or sets componentsNextLink.
        /// </summary>
        [JsonPropertyName("components@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string ComponentsNextLink { get; set; }
    
    }
}


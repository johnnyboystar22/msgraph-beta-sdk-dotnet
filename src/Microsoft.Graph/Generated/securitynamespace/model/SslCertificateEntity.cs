// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph.SecurityNamespace
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type SslCertificateEntity.
    /// </summary>
    [JsonConverter(typeof(Microsoft.Graph.DerivedTypeConverter<SslCertificateEntity>))]
    public partial class SslCertificateEntity
    {

        /// <summary>
        /// Gets or sets address.
        /// A physical address of the entity.
        /// </summary>
        [JsonPropertyName("address")]
        public Microsoft.Graph.PhysicalAddress Address { get; set; }
    
        /// <summary>
        /// Gets or sets alternateNames.
        /// Alternate names for this entity that are part of the certificate.
        /// </summary>
        [JsonPropertyName("alternateNames")]
        public IEnumerable<string> AlternateNames { get; set; }
    
        /// <summary>
        /// Gets or sets commonName.
        /// A common name for this entity.
        /// </summary>
        [JsonPropertyName("commonName")]
        public string CommonName { get; set; }
    
        /// <summary>
        /// Gets or sets email.
        /// An email for this entity.
        /// </summary>
        [JsonPropertyName("email")]
        public string Email { get; set; }
    
        /// <summary>
        /// Gets or sets givenName.
        /// If the entity is a person, this is the person's given name (first name).
        /// </summary>
        [JsonPropertyName("givenName")]
        public string GivenName { get; set; }
    
        /// <summary>
        /// Gets or sets organizationName.
        /// If the entity is an organization, this is the name of the organization.
        /// </summary>
        [JsonPropertyName("organizationName")]
        public string OrganizationName { get; set; }
    
        /// <summary>
        /// Gets or sets organizationUnitName.
        /// If the entity is an organization, this communicates if a unit in the organization is named on the entity.
        /// </summary>
        [JsonPropertyName("organizationUnitName")]
        public string OrganizationUnitName { get; set; }
    
        /// <summary>
        /// Gets or sets serialNumber.
        /// A serial number assigned to the entity; usually only available if the entity is the issuer.
        /// </summary>
        [JsonPropertyName("serialNumber")]
        public string SerialNumber { get; set; }
    
        /// <summary>
        /// Gets or sets surname.
        /// If the entity is a person, this is the person's surname (last name).
        /// </summary>
        [JsonPropertyName("surname")]
        public string Surname { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}

// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityRequestBuilder.cs.tt

namespace Microsoft.Graph.SecurityNamespace
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type HostRequestBuilder.
    /// </summary>
    public partial class HostRequestBuilder : ArtifactRequestBuilder, IHostRequestBuilder
    {

        /// <summary>
        /// Constructs a new HostRequestBuilder.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="Microsoft.Graph.IBaseClient"/> for handling requests.</param>
        public HostRequestBuilder(
            string requestUrl,
            Microsoft.Graph.IBaseClient client)
            : base(requestUrl, client)
        {
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        public new IHostRequest Request()
        {
            return this.Request(null);
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public new IHostRequest Request(IEnumerable<Microsoft.Graph.Option> options)
        {
            return new HostRequest(this.RequestUrl, this.Client, options);
        }
    
        /// <summary>
        /// Gets the request builder for ChildHostPairs.
        /// </summary>
        /// <returns>The <see cref="IHostChildHostPairsCollectionWithReferencesRequestBuilder"/>.</returns>
        public IHostChildHostPairsCollectionWithReferencesRequestBuilder ChildHostPairs
        {
            get
            {
                return new HostChildHostPairsCollectionWithReferencesRequestBuilder(this.AppendSegmentToRequestUrl("childHostPairs"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Components.
        /// </summary>
        /// <returns>The <see cref="IHostComponentsCollectionWithReferencesRequestBuilder"/>.</returns>
        public IHostComponentsCollectionWithReferencesRequestBuilder Components
        {
            get
            {
                return new HostComponentsCollectionWithReferencesRequestBuilder(this.AppendSegmentToRequestUrl("components"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Cookies.
        /// </summary>
        /// <returns>The <see cref="IHostCookiesCollectionWithReferencesRequestBuilder"/>.</returns>
        public IHostCookiesCollectionWithReferencesRequestBuilder Cookies
        {
            get
            {
                return new HostCookiesCollectionWithReferencesRequestBuilder(this.AppendSegmentToRequestUrl("cookies"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for HostPairs.
        /// </summary>
        /// <returns>The <see cref="IHostHostPairsCollectionWithReferencesRequestBuilder"/>.</returns>
        public IHostHostPairsCollectionWithReferencesRequestBuilder HostPairs
        {
            get
            {
                return new HostHostPairsCollectionWithReferencesRequestBuilder(this.AppendSegmentToRequestUrl("hostPairs"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ParentHostPairs.
        /// </summary>
        /// <returns>The <see cref="IHostParentHostPairsCollectionWithReferencesRequestBuilder"/>.</returns>
        public IHostParentHostPairsCollectionWithReferencesRequestBuilder ParentHostPairs
        {
            get
            {
                return new HostParentHostPairsCollectionWithReferencesRequestBuilder(this.AppendSegmentToRequestUrl("parentHostPairs"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for PassiveDns.
        /// </summary>
        /// <returns>The <see cref="IHostPassiveDnsCollectionWithReferencesRequestBuilder"/>.</returns>
        public IHostPassiveDnsCollectionWithReferencesRequestBuilder PassiveDns
        {
            get
            {
                return new HostPassiveDnsCollectionWithReferencesRequestBuilder(this.AppendSegmentToRequestUrl("passiveDns"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for PassiveDnsReverse.
        /// </summary>
        /// <returns>The <see cref="IHostPassiveDnsReverseCollectionWithReferencesRequestBuilder"/>.</returns>
        public IHostPassiveDnsReverseCollectionWithReferencesRequestBuilder PassiveDnsReverse
        {
            get
            {
                return new HostPassiveDnsReverseCollectionWithReferencesRequestBuilder(this.AppendSegmentToRequestUrl("passiveDnsReverse"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Reputation.
        /// </summary>
        /// <returns>The <see cref="IHostReputationRequestBuilder"/>.</returns>
        public IHostReputationRequestBuilder Reputation
        {
            get
            {
                return new HostReputationRequestBuilder(this.AppendSegmentToRequestUrl("reputation"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for SslCertificates.
        /// </summary>
        /// <returns>The <see cref="IHostSslCertificatesCollectionWithReferencesRequestBuilder"/>.</returns>
        public IHostSslCertificatesCollectionWithReferencesRequestBuilder SslCertificates
        {
            get
            {
                return new HostSslCertificatesCollectionWithReferencesRequestBuilder(this.AppendSegmentToRequestUrl("sslCertificates"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Subdomains.
        /// </summary>
        /// <returns>The <see cref="IHostSubdomainsCollectionWithReferencesRequestBuilder"/>.</returns>
        public IHostSubdomainsCollectionWithReferencesRequestBuilder Subdomains
        {
            get
            {
                return new HostSubdomainsCollectionWithReferencesRequestBuilder(this.AppendSegmentToRequestUrl("subdomains"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Trackers.
        /// </summary>
        /// <returns>The <see cref="IHostTrackersCollectionWithReferencesRequestBuilder"/>.</returns>
        public IHostTrackersCollectionWithReferencesRequestBuilder Trackers
        {
            get
            {
                return new HostTrackersCollectionWithReferencesRequestBuilder(this.AppendSegmentToRequestUrl("trackers"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Whois.
        /// </summary>
        /// <returns>The <see cref="IWhoisRecordWithReferenceRequestBuilder"/>.</returns>
        public IWhoisRecordWithReferenceRequestBuilder Whois
        {
            get
            {
                return new WhoisRecordWithReferenceRequestBuilder(this.AppendSegmentToRequestUrl("whois"), this.Client);
            }
        }
    
    }
}

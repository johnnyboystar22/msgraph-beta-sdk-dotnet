// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph.IdentityGovernanceNamespace
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Task Definition.
    /// </summary>
    [JsonConverter(typeof(Microsoft.Graph.DerivedTypeConverter<TaskDefinition>))]
    public partial class TaskDefinition : Microsoft.Graph.Entity
    {
    
        /// <summary>
        /// Gets or sets category.
        /// The category of the HR function that the tasks created using this definition can be used with. The possible values are: joiner, leaver, unknownFutureValue. This is a multi-valued enumeration whose allowed combinations are joiner, joiner,leaver, or leaver.Supports $filter(eq, ne, has) and $orderby.
        /// </summary>
        [JsonPropertyName("category")]
        public LifecycleTaskCategory? Category { get; set; }
    
        /// <summary>
        /// Gets or sets continue on error.
        /// </summary>
        [JsonPropertyName("continueOnError")]
        public bool? ContinueOnError { get; set; }
    
        /// <summary>
        /// Gets or sets description.
        /// The description of the taskDefinition.
        /// </summary>
        [JsonPropertyName("description")]
        public string Description { get; set; }
    
        /// <summary>
        /// Gets or sets display name.
        /// The display name of the taskDefinition.Supports $filter(eq, ne) and $orderby.
        /// </summary>
        [JsonPropertyName("displayName")]
        public string DisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets parameters.
        /// The parameters that must be supplied when creating a workflow task object.Supports $filter(any).
        /// </summary>
        [JsonPropertyName("parameters")]
        public IEnumerable<Parameter> Parameters { get; set; }
    
        /// <summary>
        /// Gets or sets version.
        /// The version number of the taskDefinition. New records are pushed when we add support for new parameters.Supports $filter(ge, gt, le, lt, eq, ne) and $orderby.
        /// </summary>
        [JsonPropertyName("version")]
        public Int32? Version { get; set; }
    
    }
}


// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph.ExternalConnectors
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type External Activity.
    /// </summary>
    [JsonConverter(typeof(Microsoft.Graph.DerivedTypeConverter<ExternalActivity>))]
    public partial class ExternalActivity : Microsoft.Graph.Entity
    {
    
        /// <summary>
        /// Gets or sets start date time.
        /// The date and time when the particular activity occurred. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
        /// </summary>
        [JsonPropertyName("startDateTime")]
        public DateTimeOffset? StartDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets type.
        /// The type of activity performed. The possible values are: viewed, modified, created, commented, unknownFutureValue.
        /// </summary>
        [JsonPropertyName("type")]
        public ExternalActivityType? Type { get; set; }
    
        /// <summary>
        /// Gets or sets performed by.
        /// Represents an identity used to identify who is responsible for the activity.
        /// </summary>
        [JsonPropertyName("performedBy")]
        public Identity PerformedBy { get; set; }
    
    }
}


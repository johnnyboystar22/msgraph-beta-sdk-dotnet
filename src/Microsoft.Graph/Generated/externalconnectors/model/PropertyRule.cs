// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph.ExternalConnectors
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type PropertyRule.
    /// </summary>
    [JsonConverter(typeof(Microsoft.Graph.DerivedTypeConverter<PropertyRule>))]
    public partial class PropertyRule
    {

        /// <summary>
        /// Gets or sets operation.
        /// Specifies the operations to be performed during evaluation of a single propertyRule, where property and a string from the values collection are the respective operands. Possible values are: null, equals, notEquals, contains, notContains, lessThan, greaterThan, startsWith. Required.
        /// </summary>
        [JsonPropertyName("operation")]
        public RuleOperation? Operation { get; set; }
    
        /// <summary>
        /// Gets or sets property.
        /// The property from the externalItem schema. Required.
        /// </summary>
        [JsonPropertyName("property")]
        public string Property { get; set; }
    
        /// <summary>
        /// Gets or sets values.
        /// A collection with one or many strings. The specified string(s) will be matched with the specified property using the specified operation. Required.
        /// </summary>
        [JsonPropertyName("values")]
        public IEnumerable<string> Values { get; set; }
    
        /// <summary>
        /// Gets or sets valuesJoinedBy.
        /// The join operator for evaluating multiple propertyRules. For example, if and is specified, then all propertyRules must be true for the propertyRule to be true. Possible values are: or, and. Required.
        /// </summary>
        [JsonPropertyName("valuesJoinedBy")]
        public Microsoft.Graph.BinaryOperator? ValuesJoinedBy { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
